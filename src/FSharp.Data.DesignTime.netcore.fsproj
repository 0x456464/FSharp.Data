<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.Net.Sdk">
  <PropertyGroup>
    <RootNamespace>FSharp.Data.DesignTime</RootNamespace>
    <AssemblyName>FSharp.Data.DesignTime</AssemblyName>
    <Name>FSharp.Data.DesignTime</Name>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <DefineConstants>NO_GENERATIVE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <OtherFlags>--warnon:1182</OtherFlags>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Net\UriUtils.fs" />
    <Compile Include="Net\Http.fs" />
    <Compile Include="CommonRuntime\IO.fs" />
    <Compile Include="CommonRuntime\Caching.fs" />
    <Compile Include="CommonRuntime\TextConversions.fs" />
    <Compile Include="CommonRuntime\TextRuntime.fs" />
    <Compile Include="CommonRuntime\Pluralizer.fs" />
    <Compile Include="CommonRuntime\NameUtils.fs" />
    <Compile Include="CommonRuntime\StructuralTypes.fs" />
    <Compile Include="CommonRuntime\StructuralInference.fs" />
    <Compile Include="..\paket-files\fsprojects\FSharp.TypeProviders.StarterPack\src\ProvidedTypes.fsi">
      <Link>ProvidedTypes.fsi</Link>
    </Compile>
    <Compile Include="..\paket-files\fsprojects\FSharp.TypeProviders.StarterPack\src\ProvidedTypes.fs">
      <Link>ProvidedTypes.fs</Link>
    </Compile>
    <Compile Include="..\paket-files\fsprojects\FSharp.TypeProviders.StarterPack\src\ProvidedTypesTesting.fs">
      <Link>ProvidedTypesTesting.fs</Link>
    </Compile>
    <Compile Include="CommonProviderImplementation\QuotationBuilder.fs" />
    <Compile Include="CommonProviderImplementation\AssemblyResolver.fs" />
    <Compile Include="CommonProviderImplementation\Helpers.fs" />
    <Compile Include="CommonProviderImplementation\ConversionsGenerator.fs" />
    <Compile Include="Json\JsonValue.fs" />
    <Compile Include="Json\JsonConversions.fs" />
    <Compile Include="Json\JsonExtensions.fs" />
    <Compile Include="Json\JsonRuntime.fs" />
    <Compile Include="Json\JsonInference.fs" />
    <Compile Include="Json\JsonConversionsGenerator.fs" />
    <Compile Include="Json\JsonGenerator.fs" />
    <Compile Include="Json\JsonProvider.fs" />
    <Compile Include="Xml\XmlRuntime.fs" />
    <Compile Include="Xml\XmlInference.fs" />
    <Compile Include="Xml\XmlGenerator.fs" />
    <Compile Include="Xml\XmlProvider.fs" />
    <Compile Include="Csv\CsvRuntime.fs" />
    <Compile Include="Csv\CsvFile.fs" />
    <Compile Include="Csv\CsvExtensions.fs" />
    <Compile Include="Csv\CsvInference.fs" />
    <Compile Include="Csv\CsvGenerator.fs" />
    <Compile Include="Csv\CsvProvider.fs" />
    <Compile Include="WorldBank\WorldBankRuntime.fs" />
    <Compile Include="WorldBank\WorldBankProvider.fs" />
    <Compile Include="Html\HtmlCharRefs.fs" />
    <Compile Include="Html\HtmlParser.fs" />
    <Compile Include="Html\HtmlOperations.fs" />
    <Compile Include="Html\HtmlCssSelectors.fs" />
    <Compile Include="Html\HtmlInference.fs" />
    <Compile Include="Html\HtmlRuntime.fs" />
    <Compile Include="Html\HtmlGenerator.fs" />
    <Compile Include="Html\HtmlProvider.fs" />
    <Compile Include="TypeProviderInstantiation.fs" />
    <Compile Include="AssemblyInfo.DesignTime.fs" />
    <None Include="Test.fsx" />
    <None Include="FSharp.Data.DesignTime.netcore.paket.references" />
  </ItemGroup>
  <Target Name="AfterBuild">
    <Copy SourceFiles="$(ProjectDir)$(OutDir)$(TargetName)$(TargetExt)" DestinationFolder="$(ProjectDir)..\bin\$(TargetFramework)" />
    <Copy SourceFiles="$(ProjectDir)$(OutDir)$(TargetName).pdb" DestinationFolder="$(ProjectDir)..\bin\$(TargetFramework)" Condition="Exists('$(ProjectDir)$(OutDir)$(TargetName).pdb')" />
    <Copy SourceFiles="$(ProjectDir)$(OutDir)$(TargetName).xml" DestinationFolder="$(ProjectDir)..\bin\$(TargetFramework)" />
  </Target>
  <Import Project="..\.paket\Paket.Restore.targets" />
</Project>
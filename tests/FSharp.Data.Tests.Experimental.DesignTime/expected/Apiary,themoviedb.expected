class ApiaryProvider : FDR.Apiary.ApiaryContext
    new : rootUrl:string -> ApiaryProvider
    (new ApiaryContext(rootUrl))

    member Account: ApiaryProvider+DomainTypes+Account with get
    (this :> InternalApiaryContext)

    member AsyncConfiguration: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Configuration async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = (this :> InternalApiaryContext)
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/configuration"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Authentication: ApiaryProvider+DomainTypes+Authentication with get
    (this :> InternalApiaryContext)

    member Collection: ApiaryProvider+DomainTypes+Collection with get
    (this :> InternalApiaryContext)

    member Company: ApiaryProvider+DomainTypes+Company with get
    (this :> InternalApiaryContext)

    member Configuration: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Configuration
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = (this :> InternalApiaryContext)
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/configuration"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Discover: ApiaryProvider+DomainTypes+Discover with get
    (this :> InternalApiaryContext)

    member Genre: ApiaryProvider+DomainTypes+Genre2 with get
    (this :> InternalApiaryContext)

    member Job: ApiaryProvider+DomainTypes+Job with get
    (this :> InternalApiaryContext)

    member Keyword: ApiaryProvider+DomainTypes+Keyword2 with get
    (this :> InternalApiaryContext)

    member List: ApiaryProvider+DomainTypes+List with get
    (this :> InternalApiaryContext)

    member Movie: ApiaryProvider+DomainTypes+Movie with get
    (this :> InternalApiaryContext)

    member Person: ApiaryProvider+DomainTypes+Person with get
    (this :> InternalApiaryContext)

    member Review: ApiaryProvider+DomainTypes+Review with get
    (this :> InternalApiaryContext)

    member Search: ApiaryProvider+DomainTypes+Search with get
    (this :> InternalApiaryContext)


class ApiaryProvider+DomainTypes+Account : FDR.Apiary.InternalApiaryContext
    member AsyncList: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AccountList async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/account"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member List: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AccountList
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/account"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Authentication : FDR.Apiary.InternalApiaryContext
    member GuestSession: ApiaryProvider+DomainTypes+GuestSession with get
    this

    member Session: ApiaryProvider+DomainTypes+Session with get
    this

    member Token: ApiaryProvider+DomainTypes+Token with get
    this


class ApiaryProvider+DomainTypes+Collection : FDR.Apiary.InternalApiaryContext
    member AsyncGetCollection: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Collection2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/collection/{id}"
                                          Arguments = [| ("{id}",
                                                          id) |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member GetCollection: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Collection2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/collection/{id}"
          Arguments = [| ("{id}",
                          id) |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Company : FDR.Apiary.InternalApiaryContext
    member AsyncGetCompany: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Company2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/company/{id}"
                                          Arguments = [| ("{id}",
                                                          id) |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member GetCompany: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Company2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/company/{id}"
          Arguments = [| ("{id}",
                          id) |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Configuration : FDR.Apiary.ApiaryDocument
    member ChangeKeys: string[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "change_keys"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Images: ApiaryProvider+DomainTypes+Images with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "images")))


class ApiaryProvider+DomainTypes+Discover : FDR.Apiary.InternalApiaryContext
    member AsyncMovie: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+DiscoverMovie async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/discover/movie"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Movie: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+DiscoverMovie
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/discover/movie"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes

class ApiaryProvider+DomainTypes+Genre2 : FDR.Apiary.InternalApiaryContext
    member AsyncList: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+GenreList async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/genre/list"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Id: ApiaryProvider+DomainTypes+Id with get
    this

    member List: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+GenreList
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/genre/list"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Job : FDR.Apiary.InternalApiaryContext
    member AsyncList: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+JobList async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/job/list"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member List: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+JobList
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/job/list"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Keyword2 : FDR.Apiary.InternalApiaryContext
    member AsyncGetKeyword: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Keyword3 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/keyword/{id}"
                                          Arguments = [| ("{id}",
                                                          id) |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member GetKeyword: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Keyword3
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/keyword/{id}"
          Arguments = [| ("{id}",
                          id) |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+List : FDR.Apiary.InternalApiaryContext
    member AsyncGetList: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+List2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/list/{id}"
                                          Arguments = [| ("{id}",
                                                          id) |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member GetList: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+List2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/list/{id}"
          Arguments = [| ("{id}",
                          id) |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Movie : FDR.Apiary.InternalApiaryContext
    member AsyncChanges: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieChanges2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/changes"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncGetMovie: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Movie2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}"
                                          Arguments = [| ("{id}",
                                                          id) |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncLatest: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieLatest async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/latest"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncNowPlaying: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieNowPlaying async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/now_playing"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncPopular: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MoviePopular async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/popular"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncTopRated: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieTopRated async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/top_rated"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncUpcoming: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieUpcoming async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/upcoming"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Changes: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieChanges2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/changes"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member GetMovie: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Movie2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}"
          Arguments = [| ("{id}",
                          id) |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Latest: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieLatest
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/latest"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member NowPlaying: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieNowPlaying
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/now_playing"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Popular: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MoviePopular
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/popular"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member TopRated: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieTopRated
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/top_rated"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Upcoming: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieUpcoming
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/upcoming"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Person : FDR.Apiary.InternalApiaryContext
    member AsyncChanges: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonChanges2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/changes"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncGetPerson: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Person2 async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/{id}"
                                          Arguments = [| ("{id}",
                                                          id) |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncLatest: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonLatest async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/latest"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncPopular: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonPopular async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/popular"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Changes: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonChanges2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/changes"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member GetPerson: id:string -> query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+Person2
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/{id}"
          Arguments = [| ("{id}",
                          id) |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Latest: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonLatest
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/latest"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Popular: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonPopular
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/popular"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Review : FDR.Apiary.InternalApiaryContext
    member AsyncId: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+ReviewId async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/review/{id}"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Id: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+ReviewId
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/review/{id}"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Search : FDR.Apiary.InternalApiaryContext
    member AsyncCollection: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchCollection async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/search/collection"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncCompany: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchCompany async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/search/company"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncKeyword: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchKeyword async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/search/keyword"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncList: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchList async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/search/list"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncMovie: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchMovie async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/search/movie"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncPerson: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchPerson async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/search/person"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Collection: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchCollection
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/search/collection"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Company: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchCompany
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/search/company"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Keyword: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchKeyword
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/search/keyword"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member List: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchList
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/search/list"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Movie: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchMovie
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/search/movie"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Person: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+SearchPerson
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/search/person"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+AccountList : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member IncludeAdult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "include_adult"))).JsonValue)

    member Iso31661: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_3166_1"))).JsonValue)

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member Username: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "username"))).JsonValue)


class ApiaryProvider+DomainTypes+Collection2 : FDR.Apiary.ApiaryDocument
    member AsyncImages: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+CollectionImages async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/collection/{id}/images"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Images: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+CollectionImages
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/collection/{id}/images"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member Parts: ApiaryProvider+DomainTypes+Part[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "parts"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Company2 : FDR.Apiary.ApiaryDocument
    member AsyncMovies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+CompanyMovies async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/company/{id}/movies"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Description: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "description")))

    member Headquarters: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "headquarters"))).JsonValue)

    member Homepage: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "homepage"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member LogoPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "logo_path"))).JsonValue)

    member Movies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+CompanyMovies
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/company/{id}/movies"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member ParentCompany: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "parent_company")))


class ApiaryProvider+DomainTypes+DiscoverMovie : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result14[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+GenreList : FDR.Apiary.ApiaryDocument
    member Genres: ApiaryProvider+DomainTypes+Genre3[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "genres"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+GuestSession : FDR.Apiary.InternalApiaryContext
    member AsyncNew: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AuthenticationGuestSessionNew async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/authentication/guest_session/new"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member New: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AuthenticationGuestSessionNew
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/authentication/guest_session/new"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Id : FDR.Apiary.InternalApiaryContext
    member AsyncMovies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+GenreIdMovies async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/genre/{id}/movies"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Movies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+GenreIdMovies
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/genre/{id}/movies"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Images : FDR.Apiary.ApiaryDocument
    member BackdropSizes: string[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_sizes"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member BaseUrl: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "base_url"))).JsonValue)

    member LogoSizes: string[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "logo_sizes"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member PosterSizes: string[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_sizes"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member ProfileSizes: string[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_sizes"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member SecureBaseUrl: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "secure_base_url"))).JsonValue)


class ApiaryProvider+DomainTypes+JobList : FDR.Apiary.ApiaryDocument
    member Jobs: ApiaryProvider+DomainTypes+Job2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "jobs"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+Keyword3 : FDR.Apiary.ApiaryDocument
    member AsyncMovies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+KeywordMovies async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/keyword/{id}/movies"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Movies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+KeywordMovies
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/keyword/{id}/movies"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+List2 : FDR.Apiary.ApiaryDocument
    member AddItem: query:string * string list -> headers:string * string list -> FDR.Apiary.ApiaryDocument
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json
Content-Type:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "POST"
          Path = "/3/list/{id}/add_item"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member AsyncAddItem: query:string * string list -> headers:string * string list -> FDR.Apiary.ApiaryDocument async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json
Content-Type:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "POST"
                                          Path = "/3/list/{id}/add_item"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncItemStatus: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+ListItemStatus async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/list/{id}/item_status"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncRemoveItem: query:string * string list -> headers:string * string list -> FDR.Apiary.ApiaryDocument async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json
Content-Type:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "POST"
                                          Path = "/3/list/{id}/remove_item"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member CreatedBy: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "created_by"))).JsonValue)

    member Description: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "description"))).JsonValue)

    member FavoriteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "favorite_count"))).JsonValue, "")

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member ItemCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "item_count"))).JsonValue, "")

    member ItemStatus: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+ListItemStatus
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/list/{id}/item_status"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Items: ApiaryProvider+DomainTypes+Item3[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "items"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member RemoveItem: query:string * string list -> headers:string * string list -> FDR.Apiary.ApiaryDocument
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json
Content-Type:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "POST"
          Path = "/3/list/{id}/remove_item"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Movie2 : FDR.Apiary.ApiaryDocument
    member AccountStates: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieAccountStates
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/account_states"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member AlternativeTitles: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieAlternativeTitles
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/alternative_titles"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member AsyncAccountStates: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieAccountStates async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/account_states"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncAlternativeTitles: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieAlternativeTitles async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/alternative_titles"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncCasts: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieCasts async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/casts"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncChanges: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieChanges async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/changes"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncImages: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieImages async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/images"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncKeywords: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieKeywords async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/keywords"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncLists: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieLists async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/lists"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncRating: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieRating async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json
Content-Type:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "POST"
                                          Path = "/3/movie/{id}/rating"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncReleases: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieReleases async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/releases"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncReviews: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieReviews async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/reviews"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncSimilarMovies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieSimilarMovies async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/similar_movies"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncTrailers: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieTrailers async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/trailers"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncTranslations: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieTranslations async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/movie/{id}/translations"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member BelongsToCollection: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "belongs_to_collection")))

    member Budget: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "budget"))).JsonValue, "")

    member Casts: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieCasts
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/casts"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Changes: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieChanges
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/changes"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Genres: ApiaryProvider+DomainTypes+Genre[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "genres"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Homepage: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "homepage"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Images: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieImages
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/images"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member ImdbId: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "imdb_id"))).JsonValue)

    member Keywords: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieKeywords
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/keywords"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Lists: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieLists
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/lists"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member Overview: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "overview"))).JsonValue)

    member Popularity: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "popularity"))).JsonValue, "")

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ProductionCompanies: ApiaryProvider+DomainTypes+ProductionCompany[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "production_companies"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member ProductionCountries: ApiaryProvider+DomainTypes+ProductionCountry[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "production_countries"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Rating: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieRating
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json
Content-Type:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "POST"
          Path = "/3/movie/{id}/rating"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Releases: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieReleases
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/releases"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Revenue: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "revenue"))).JsonValue, "")

    member Reviews: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieReviews
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/reviews"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Runtime: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "runtime"))).JsonValue, "")

    member SimilarMovies: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieSimilarMovies
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/similar_movies"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member SpokenLanguages: ApiaryProvider+DomainTypes+SpokenLanguage[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "spoken_languages"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Status: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "status"))).JsonValue)

    member Tagline: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "tagline"))).JsonValue)

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member Trailers: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieTrailers
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/trailers"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Translations: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+MovieTranslations
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/movie/{id}/translations"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieChanges2 : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result8[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieLatest : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member BackdropPath: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path")))

    member BelongsToCollection: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "belongs_to_collection")))

    member Budget: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "budget"))).JsonValue, "")

    member Genres: ApiaryProvider+DomainTypes+GenresChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "genres")))

    member Homepage: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "homepage")))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member ImdbId: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "imdb_id"))).JsonValue)

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member Overview: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "overview")))

    member Popularity: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "popularity"))).JsonValue, "")

    member PosterPath: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path")))

    member ProductionCompanies: ApiaryProvider+DomainTypes+ProductionCompany2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "production_companies"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member ProductionCountries: ApiaryProvider+DomainTypes+ProductionCountry2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "production_countries"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Revenue: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "revenue"))).JsonValue, "")

    member Runtime: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "runtime")))

    member SpokenLanguages: ApiaryProvider+DomainTypes+SpokenLanguage2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "spoken_languages"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Tagline: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "tagline")))

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieNowPlaying : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result5[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MoviePopular : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result6[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieTopRated : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result7[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieUpcoming : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result4[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Person2 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member AlsoKnownAs: ApiaryProvider+DomainTypes+AlsoKnownAsChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "also_known_as")))

    member AsyncChanges: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonChanges async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/{id}/changes"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncCredits: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonCredits async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/{id}/credits"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member AsyncImages: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonImages async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this.Context
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/person/{id}/images"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member Biography: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "biography"))).JsonValue)

    member Birthday: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "birthday"))).JsonValue, "")

    member Changes: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonChanges
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/{id}/changes"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Credits: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonCredits
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/{id}/credits"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Deathday: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "deathday"))).JsonValue)

    member Homepage: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "homepage"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Images: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+PersonImages
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this.Context
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/person/{id}/images"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member PlaceOfBirth: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "place_of_birth"))).JsonValue)

    member ProfilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_path"))).JsonValue)


class ApiaryProvider+DomainTypes+PersonChanges2 : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result10[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+PersonLatest : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member AlsoKnownAs: ApiaryProvider+DomainTypes+AlsoKnownAsChoice2 with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "also_known_as")))

    member Biography: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "biography")))

    member Birthday: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "birthday")))

    member Deathday: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "deathday")))

    member Homepage: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "homepage")))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member PlaceOfBirth: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "place_of_birth")))

    member ProfilePath: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_path")))


class ApiaryProvider+DomainTypes+PersonPopular : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result9[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+ReviewId : FDR.Apiary.ApiaryDocument
    member Author: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "author"))).JsonValue)

    member Content: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "content"))).JsonValue)

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member MediaId: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "media_id"))).JsonValue, "")

    member MediaTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "media_title"))).JsonValue)

    member MediaType: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "media_type"))).JsonValue)

    member Url: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "url"))).JsonValue)


class ApiaryProvider+DomainTypes+SearchCollection : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result16[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+SearchCompany : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result19[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+SearchKeyword : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result20[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+SearchList : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result18[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+SearchMovie : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result15[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+SearchPerson : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result17[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Session : FDR.Apiary.InternalApiaryContext
    member AsyncNew: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AuthenticationSessionNew async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/authentication/session/new"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member New: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AuthenticationSessionNew
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/authentication/session/new"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+Token : FDR.Apiary.InternalApiaryContext
    member AsyncNew: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AuthenticationTokenNew async
    ApiaryGenerationHelper.AsyncMap(let patternInput = 
                                        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
                                        let query, headers = patternInput
                                        let apiCtx = this
                                        (apiCtx :> ApiaryOperations),
                                        { Method = "GET"
                                          Path = "/3/authentication/token/new"
                                          Arguments = [| |]
                                          Headers = headers
                                          Query = query }
                                    let args, apiCtx = patternInput
                                    apiCtx.AsyncInvokeOperation(args), new Func<_,_>(id)))

    member New: query:string * string list -> headers:string * string list -> ApiaryProvider+DomainTypes+AuthenticationTokenNew
    let patternInput = 
        let patternInput = ApiaryRuntime.ProcessParameters("Accept:application/json", headers, query)
        let query, headers = patternInput
        let apiCtx = this
        (apiCtx :> ApiaryOperations),
        { Method = "GET"
          Path = "/3/authentication/token/new"
          Arguments = [| |]
          Headers = headers
          Query = query }
    let args, apiCtx = patternInput
    apiCtx.InvokeOperation(args)


class ApiaryProvider+DomainTypes+AlsoKnownAsChoice : FDR.Apiary.ApiaryDocument

class ApiaryProvider+DomainTypes+AlsoKnownAsChoice2 : FDR.Apiary.ApiaryDocument

class ApiaryProvider+DomainTypes+AuthenticationGuestSessionNew : FDR.Apiary.ApiaryDocument
    member ExpiresAt: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "expires_at"))).JsonValue)

    member GuestSessionId: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "guest_session_id"))).JsonValue)

    member Success: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "success"))).JsonValue)


class ApiaryProvider+DomainTypes+AuthenticationSessionNew : FDR.Apiary.ApiaryDocument
    member SessionId: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "session_id"))).JsonValue)

    member Success: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "success"))).JsonValue)


class ApiaryProvider+DomainTypes+AuthenticationTokenNew : FDR.Apiary.ApiaryDocument
    member ExpiresAt: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "expires_at"))).JsonValue)

    member RequestToken: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "request_token"))).JsonValue)

    member Success: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "success"))).JsonValue)


class ApiaryProvider+DomainTypes+CollectionImages : FDR.Apiary.ApiaryDocument
    member Backdrops: ApiaryProvider+DomainTypes+Backdrop2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrops"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Posters: ApiaryProvider+DomainTypes+Poster2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "posters"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+CompanyMovies : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result11[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Genre : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Genre3 : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+GenreIdMovies : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result12[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+GenresChoice : FDR.Apiary.ApiaryDocument

class ApiaryProvider+DomainTypes+Item3 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Job2 : FDR.Apiary.ApiaryDocument
    member Department: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "department"))).JsonValue)

    member JobList: string[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "job_list"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))


class ApiaryProvider+DomainTypes+KeywordMovies : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result13[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+ListItemStatus : FDR.Apiary.ApiaryDocument
    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member ItemPresent: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "item_present"))).JsonValue)


class ApiaryProvider+DomainTypes+MovieAccountStates : FDR.Apiary.ApiaryDocument
    member Favorite: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "favorite"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Rated: ApiaryProvider+DomainTypes+Rated with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "rated")))

    member Watchlist: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "watchlist"))).JsonValue)


class ApiaryProvider+DomainTypes+MovieAlternativeTitles : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Titles: ApiaryProvider+DomainTypes+Title[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "titles"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+MovieCasts : FDR.Apiary.ApiaryDocument
    member Cast: ApiaryProvider+DomainTypes+Cast[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "cast"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Crew: ApiaryProvider+DomainTypes+Crew[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "crew"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieChanges : FDR.Apiary.ApiaryDocument
    member Changes: ApiaryProvider+DomainTypes+Change[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "changes"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+MovieImages : FDR.Apiary.ApiaryDocument
    member Backdrops: ApiaryProvider+DomainTypes+Backdrop[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrops"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Posters: ApiaryProvider+DomainTypes+Poster[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "posters"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+MovieKeywords : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Keywords: ApiaryProvider+DomainTypes+Keyword[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "keywords"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+MovieLists : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result3[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieRating : FDR.Apiary.ApiaryDocument
    member StatusCode: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "status_code"))).JsonValue, "")

    member StatusMessage: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "status_message"))).JsonValue)


class ApiaryProvider+DomainTypes+MovieReleases : FDR.Apiary.ApiaryDocument
    member Countries: ApiaryProvider+DomainTypes+Country[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "countries"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieReviews : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieSimilarMovies : FDR.Apiary.ApiaryDocument
    member Page: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "page"))).JsonValue, "")

    member Results: ApiaryProvider+DomainTypes+Result[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "results"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member TotalPages: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_pages"))).JsonValue, "")

    member TotalResults: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "total_results"))).JsonValue, "")


class ApiaryProvider+DomainTypes+MovieTrailers : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Quicktime: ApiaryProvider+DomainTypes+QuicktimeChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "quicktime")))

    member Youtube: ApiaryProvider+DomainTypes+Youtube[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "youtube"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+MovieTranslations : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Translations: ApiaryProvider+DomainTypes+Translation[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "translations"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+Part : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)


class ApiaryProvider+DomainTypes+PersonChanges : FDR.Apiary.ApiaryDocument
    member Changes: ApiaryProvider+DomainTypes+Change2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "changes"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+PersonCredits : FDR.Apiary.ApiaryDocument
    member Cast: ApiaryProvider+DomainTypes+Cast2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "cast"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Crew: ApiaryProvider+DomainTypes+Crew2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "crew"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")


class ApiaryProvider+DomainTypes+PersonImages : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Profiles: ApiaryProvider+DomainTypes+Profile[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profiles"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+ProductionCompany : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+ProductionCompany2 : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+ProductionCountry : FDR.Apiary.ApiaryDocument
    member Iso31661: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_3166_1"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+ProductionCountry2 : FDR.Apiary.ApiaryDocument
    member Iso31661: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_3166_1"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Result10 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result14 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member Popularity: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "popularity"))).JsonValue, "")

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result15 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member Popularity: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "popularity"))).JsonValue, "")

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: ApiaryProvider+DomainTypes+ReleaseDateChoice4 with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date")))

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result16 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Result17 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member ProfilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Result18 : FDR.Apiary.ApiaryDocument
    member Description: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "description"))).JsonValue)

    member FavoriteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "favorite_count"))).JsonValue, "")

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member ItemCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "item_count"))).JsonValue, "")

    member ListType: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "list_type"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Result19 : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member LogoPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "logo_path"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Result20 : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Result4 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result5 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result6 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member Popularity: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "popularity"))).JsonValue, "")

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result7 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result8 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result9 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member ProfilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_path"))).JsonValue)


class ApiaryProvider+DomainTypes+SpokenLanguage : FDR.Apiary.ApiaryDocument
    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+SpokenLanguage2 : FDR.Apiary.ApiaryDocument
    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Backdrop : FDR.Apiary.ApiaryDocument
    member AspectRatio: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "aspect_ratio"))).JsonValue, "")

    member FilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "file_path"))).JsonValue)

    member Height: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "height"))).JsonValue, "")

    member Iso6391: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1")))

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")

    member Width: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "width"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Backdrop2 : FDR.Apiary.ApiaryDocument
    member AspectRatio: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "aspect_ratio"))).JsonValue, "")

    member FilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "file_path"))).JsonValue)

    member Height: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "height"))).JsonValue, "")

    member Iso6391: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1")))

    member Width: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "width"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Cast : FDR.Apiary.ApiaryDocument
    member Character: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "character"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member Order: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "order"))).JsonValue, "")

    member ProfilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Cast2 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member Character: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "character"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: ApiaryProvider+DomainTypes+OriginalTitleChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title")))

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: ApiaryProvider+DomainTypes+ReleaseDateChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date")))

    member Title: ApiaryProvider+DomainTypes+TitleChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title")))


class ApiaryProvider+DomainTypes+Change : FDR.Apiary.ApiaryDocument
    member Items: ApiaryProvider+DomainTypes+Item[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "items"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Key: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "key"))).JsonValue)


class ApiaryProvider+DomainTypes+Change2 : FDR.Apiary.ApiaryDocument
    member Items: ApiaryProvider+DomainTypes+Item2[] with get
    JsonOperations.ConvertArray((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "items"))), new Func<_,_>(fun (t:ApiaryDocument) -> t.JsonValue), new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member Key: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "key"))).JsonValue)


class ApiaryProvider+DomainTypes+Country : FDR.Apiary.ApiaryDocument
    member Certification: ApiaryProvider+DomainTypes+CertificationChoice with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "certification")))

    member Iso31661: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_3166_1"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Crew : FDR.Apiary.ApiaryDocument
    member Department: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "department"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Job: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "job"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member ProfilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "profile_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Crew2 : FDR.Apiary.ApiaryDocument
    member Adult: bool with get
    JsonOperations.GetBoolean((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "adult"))).JsonValue)

    member Department: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "department"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Job: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "job"))).JsonValue)

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: ApiaryProvider+DomainTypes+ReleaseDateChoice2 with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date")))

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)


class ApiaryProvider+DomainTypes+Keyword : FDR.Apiary.ApiaryDocument
    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Poster : FDR.Apiary.ApiaryDocument
    member AspectRatio: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "aspect_ratio"))).JsonValue, "")

    member FilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "file_path"))).JsonValue)

    member Height: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "height"))).JsonValue, "")

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")

    member Width: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "width"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Poster2 : FDR.Apiary.ApiaryDocument
    member AspectRatio: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "aspect_ratio"))).JsonValue, "")

    member FilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "file_path"))).JsonValue)

    member Height: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "height"))).JsonValue, "")

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member Width: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "width"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Profile : FDR.Apiary.ApiaryDocument
    member AspectRatio: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "aspect_ratio"))).JsonValue, "")

    member FilePath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "file_path"))).JsonValue)

    member Height: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "height"))).JsonValue, "")

    member Iso6391: FDR.Apiary.ApiaryDocument with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1")))

    member Width: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "width"))).JsonValue, "")


class ApiaryProvider+DomainTypes+QuicktimeChoice : FDR.Apiary.ApiaryDocument

class ApiaryProvider+DomainTypes+Rated : FDR.Apiary.ApiaryDocument
    member Value: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "value"))).JsonValue, "")


class ApiaryProvider+DomainTypes+ReleaseDateChoice4 : FDR.Apiary.ApiaryDocument
    member DateTime: System.DateTime option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "DateTime", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetDateTime(t.JsonValue, "")))


class ApiaryProvider+DomainTypes+Result : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result11 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: ApiaryProvider+DomainTypes+ReleaseDateChoice3 with get
    (new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date")))

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result12 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result13 : FDR.Apiary.ApiaryDocument
    member BackdropPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "backdrop_path"))).JsonValue)

    member Id: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue, "")

    member OriginalTitle: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "original_title"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)

    member ReleaseDate: System.DateTime with get
    JsonOperations.GetDateTime((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "release_date"))).JsonValue, "")

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)

    member VoteAverage: decimal with get
    JsonOperations.GetDecimal((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_average"))).JsonValue, "")

    member VoteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "vote_count"))).JsonValue, "")


class ApiaryProvider+DomainTypes+Result2 : FDR.Apiary.ApiaryDocument
    member Author: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "author"))).JsonValue)

    member Content: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "content"))).JsonValue)

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Url: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "url"))).JsonValue)


class ApiaryProvider+DomainTypes+Result3 : FDR.Apiary.ApiaryDocument
    member Description: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "description"))).JsonValue)

    member FavoriteCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "favorite_count"))).JsonValue, "")

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member ItemCount: int with get
    JsonOperations.GetInteger((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "item_count"))).JsonValue, "")

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member PosterPath: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "poster_path"))).JsonValue)


class ApiaryProvider+DomainTypes+Title : FDR.Apiary.ApiaryDocument
    member Iso31661: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_3166_1"))).JsonValue)

    member Title: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "title"))).JsonValue)


class ApiaryProvider+DomainTypes+Translation : FDR.Apiary.ApiaryDocument
    member EnglishName: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "english_name"))).JsonValue)

    member Iso6391: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "iso_639_1"))).JsonValue)

    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)


class ApiaryProvider+DomainTypes+Youtube : FDR.Apiary.ApiaryDocument
    member Name: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "name"))).JsonValue)

    member Size: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "size"))).JsonValue)

    member Source: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "source"))).JsonValue)


class ApiaryProvider+DomainTypes+CertificationChoice : FDR.Apiary.ApiaryDocument
    member Number: int option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "Number", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member String: string option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "String", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))


class ApiaryProvider+DomainTypes+Item : FDR.Apiary.ApiaryDocument
    member Action: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "action"))).JsonValue)

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Iso6391: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "iso_639_1", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member OriginalValue: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "original_value", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Time: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "time"))).JsonValue)

    member Value: ApiaryProvider+DomainTypes+ValueChoice option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "value", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))


class ApiaryProvider+DomainTypes+Item2 : FDR.Apiary.ApiaryDocument
    member Action: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "action"))).JsonValue)

    member Id: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "id"))).JsonValue)

    member Time: string with get
    JsonOperations.GetString((new ApiaryDocument(JsonOperations.GetProperty(this.JsonValue, "time"))).JsonValue)

    member Value: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "value", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))


class ApiaryProvider+DomainTypes+OriginalTitleChoice : FDR.Apiary.ApiaryDocument
    member Number: int option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "Number", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member String: string option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "String", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))


class ApiaryProvider+DomainTypes+ReleaseDateChoice : FDR.Apiary.ApiaryDocument
    member DateTime: System.DateTime option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "DateTime", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetDateTime(t.JsonValue, "")))


class ApiaryProvider+DomainTypes+ReleaseDateChoice2 : FDR.Apiary.ApiaryDocument
    member DateTime: System.DateTime option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "DateTime", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetDateTime(t.JsonValue, "")))


class ApiaryProvider+DomainTypes+ReleaseDateChoice3 : FDR.Apiary.ApiaryDocument
    member DateTime: System.DateTime option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "DateTime", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetDateTime(t.JsonValue, "")))


class ApiaryProvider+DomainTypes+TitleChoice : FDR.Apiary.ApiaryDocument
    member Number: int option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "Number", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member String: string option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "String", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))


class ApiaryProvider+DomainTypes+ValueChoice : FDR.Apiary.ApiaryDocument
    member Boolean: bool option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "Boolean", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetBoolean(t.JsonValue)))

    member Number: int option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "Number", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member Record: ApiaryProvider+DomainTypes+ValueChoice4of4 option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "Record", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(id)))

    member String: string option with get
    JsonOperations.TryGetValueByTypeTag(this.JsonValue, "String", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))


class ApiaryProvider+DomainTypes+ValueChoice4of4 : FDR.Apiary.ApiaryDocument
    member Certification: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "certification", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Character: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "character", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Department: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "department", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Id: int option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "id", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member Iso31661: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "iso_3166_1", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Job: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "job", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Name: string option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "name", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetString(t.JsonValue)))

    member Order: int option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "order", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member PersonId: int option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "person_id", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetInteger(t.JsonValue, "")))

    member Primary: bool option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "primary", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetBoolean(t.JsonValue)))

    member ReleaseDate: System.DateTime option with get
    JsonOperations.ConvertOptionalProperty(this.JsonValue, "release_date", new Func<_,_>(fun (t:JsonValue) -> (new ApiaryDocument(t))), new Func<_,_>(fun (t:ApiaryDocument) -> JsonOperations.GetDateTime(t.JsonValue, "")))



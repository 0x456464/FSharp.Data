class JsonProvider
    static member AsyncGetSamples: () -> JsonProvider+Root[] async
    let f = new Func<_,_>(fun (t:TextReader) -> JsonRuntime.ConvertArray(JsonDocument.Create(t, ""), new Func<_,_>(id))))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "GitHub.json"), f)

    static member AsyncLoad: uri:string -> JsonProvider+Root[] async
    let f = new Func<_,_>(fun (t:TextReader) -> JsonRuntime.ConvertArray(JsonDocument.Create(t, ""), new Func<_,_>(id))))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" uri), f)

    static member GetSamples: () -> JsonProvider+Root[]
    JsonRuntime.ConvertArray(JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "GitHub.json")), ""), new Func<_,_>(id)))

    static member Load: stream:System.IO.Stream -> JsonProvider+Root[]
    JsonRuntime.ConvertArray(JsonDocument.Create(((new StreamReader(stream)) :> TextReader), ""), new Func<_,_>(id)))

    static member Load: reader:System.IO.TextReader -> JsonProvider+Root[]
    JsonRuntime.ConvertArray(JsonDocument.Create(reader, ""), new Func<_,_>(id)))

    static member Load: uri:string -> JsonProvider+Root[]
    JsonRuntime.ConvertArray(JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" uri)), ""), new Func<_,_>(id)))

    static member Parse: text:string -> JsonProvider+Root[]
    JsonRuntime.ConvertArray(JsonDocument.Create(((new StringReader(text)) :> TextReader), ""), new Func<_,_>(id)))


class JsonProvider+Root : FDR.IJsonDocument
    new : assignee:FDR.IJsonDocument -> body:string option -> closed_at:FDR.IJsonDocument -> comments:int -> comments_url:string -> created_at:System.DateTime -> events_url:string -> html_url:string -> id:int -> labels:JsonProvider+Label[] -> labels_url:string -> milestone:FDR.IJsonDocument -> number:int -> pull_request:JsonProvider+PullRequest -> state:string -> title:string -> updated_at:System.DateTime -> url:string -> user:JsonProvider+User -> JsonProvider+Root
    JsonRuntime.CreateObject([| ("assignee",
                                 (assignee :> obj))
                                ("body",
                                 (body :> obj))
                                ("closed_at",
                                 (closed_at :> obj))
                                ("comments",
                                 (comments :> obj))
                                ("comments_url",
                                 (comments_url :> obj))
                                ("created_at",
                                 (created_at :> obj))
                                ("events_url",
                                 (events_url :> obj))
                                ("html_url",
                                 (html_url :> obj))
                                ("id",
                                 (id :> obj))
                                ("labels",
                                 (labels :> obj))
                                ("labels_url",
                                 (labels_url :> obj))
                                ("milestone",
                                 (milestone :> obj))
                                ("number",
                                 (number :> obj))
                                ("pull_request",
                                 (pull_request :> obj))
                                ("state",
                                 (state :> obj))
                                ("title",
                                 (title :> obj))
                                ("updated_at",
                                 (updated_at :> obj))
                                ("url",
                                 (url :> obj))
                                ("user",
                                 (user :> obj)) |], "")

    member Assignee: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "assignee")

    member Body: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "body"))

    member ClosedAt: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "closed_at")

    member Comments: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "comments")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member CommentsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "comments_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member CreatedAt: System.DateTime with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "created_at")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertDateTime("", value.JsonOpt), value.JsonOpt)

    member EventsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "events_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member HtmlUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "html_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Labels: JsonProvider+Label[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "labels"), new Func<_,_>(id)))

    member LabelsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "labels_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Milestone: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "milestone")

    member Number: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "number")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member PullRequest: JsonProvider+PullRequest with get
    JsonRuntime.GetPropertyPacked(this, "pull_request")

    member State: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "state")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Title: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "title")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member UpdatedAt: System.DateTime with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "updated_at")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertDateTime("", value.JsonOpt), value.JsonOpt)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member User: JsonProvider+User with get
    JsonRuntime.GetPropertyPacked(this, "user")


class JsonProvider+Label : FDR.IJsonDocument
    new : color:JsonProvider+FloatOrString -> name:string -> url:string -> JsonProvider+Label
    JsonRuntime.CreateObject([| ("color",
                                 (color :> obj))
                                ("name",
                                 (name :> obj))
                                ("url",
                                 (url :> obj)) |], "")

    member Color: JsonProvider+FloatOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "color")

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+PullRequest : FDR.IJsonDocument
    new : diff_url:string option -> html_url:string option -> patch_url:string option -> JsonProvider+PullRequest
    JsonRuntime.CreateObject([| ("diff_url",
                                 (diff_url :> obj))
                                ("html_url",
                                 (html_url :> obj))
                                ("patch_url",
                                 (patch_url :> obj)) |], "")

    member DiffUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "diff_url"))

    member HtmlUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "html_url"))

    member PatchUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "patch_url"))


class JsonProvider+User : FDR.IJsonDocument
    new : avatar_url:string -> events_url:string -> followers_url:string -> following_url:string -> gists_url:string -> gravatar_id:System.Guid -> html_url:string -> id:int -> login:string -> organizations_url:string -> received_events_url:string -> repos_url:string -> starred_url:string -> subscriptions_url:string -> type:string -> url:string -> JsonProvider+User
    JsonRuntime.CreateObject([| ("avatar_url",
                                 (avatar_url :> obj))
                                ("events_url",
                                 (events_url :> obj))
                                ("followers_url",
                                 (followers_url :> obj))
                                ("following_url",
                                 (following_url :> obj))
                                ("gists_url",
                                 (gists_url :> obj))
                                ("gravatar_id",
                                 (gravatar_id :> obj))
                                ("html_url",
                                 (html_url :> obj))
                                ("id",
                                 (id :> obj))
                                ("login",
                                 (login :> obj))
                                ("organizations_url",
                                 (organizations_url :> obj))
                                ("received_events_url",
                                 (received_events_url :> obj))
                                ("repos_url",
                                 (repos_url :> obj))
                                ("starred_url",
                                 (starred_url :> obj))
                                ("subscriptions_url",
                                 (subscriptions_url :> obj))
                                ("type",
                                 (type :> obj))
                                ("url",
                                 (url :> obj)) |], "")

    member AvatarUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "avatar_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member EventsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "events_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member FollowersUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "followers_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member FollowingUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "following_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member GistsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "gists_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member GravatarId: System.Guid with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "gravatar_id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertGuid(value.JsonOpt), value.JsonOpt)

    member HtmlUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "html_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Login: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "login")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member OrganizationsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "organizations_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ReceivedEventsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "received_events_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ReposUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "repos_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member StarredUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "starred_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member SubscriptionsUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "subscriptions_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "type")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+FloatOrString : FDR.IJsonDocument
    new : Number:float -> String:string -> JsonProvider+FloatOrString
    null

    member Number2: float option with get
    JsonRuntime.TryGetValueByTypeTag(this, "", "Number", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertFloat("", "", Some t.JsonValue), Some t.JsonValue)))

    member String2: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "", "String", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertString("", Some t.JsonValue), Some t.JsonValue)))



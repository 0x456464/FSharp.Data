[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider : FDR.TypedHtmlDocument
    new : () -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "ebay_cars.htm")))

    static member AsyncGetSample: () -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> TypedHtmlDocument.Create(false, "", "", t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "ebay_cars.htm"), f)

    static member AsyncLoad: uri:string -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> TypedHtmlDocument.Create(false, "", "", t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri), f)

    static member GetSample: () -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "ebay_cars.htm")))

    member Lists: HtmlProvider+ListsContainer with get
    this

    static member Load: stream:System.IO.Stream -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", ((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", reader)

    static member Load: uri:string -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri)))

    static member Parse: text:string -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", ((new StringReader(text)) :> TextReader))


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListsContainer : FDR.TypedHtmlDocument
    member 2002Rover75ClubSeANiceOne: HtmlProvider+2002Rover75ClubSeANiceOne with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "2002 ROVER 75,CLUB SE.A NICE ONE.!!!!!!!!.")

    member 2002Rover75ClubSeANiceOne: HtmlProvider+2002Rover75ClubSeANiceOne with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "2002 ROVER 75,CLUB SE.A NICE ONE.!!!!!!!!.")

    member GfL: HtmlProvider+GfL with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "gf-l")

    member GhEb: HtmlProvider+GhEb with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "gh-eb")

    member GhTopl: HtmlProvider+GhTopl with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "gh-topl")

    member List11: HtmlProvider+List11 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertInteger("", value), value))
    HtmlList<_>.Create(rowConverter, this, "List11")

    member List3: HtmlProvider+List3 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List3")

    member List7: HtmlProvider+List7 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List7")

    member List9: HtmlProvider+List9 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List9")

    member Menu3: HtmlProvider+Menu3 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "menu3")

    member Menu3: HtmlProvider+Menu3 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "menu3")

    member Menu3: HtmlProvider+Menu3 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertInteger("", value), value))
    HtmlList<_>.Create(rowConverter, this, "menu3")

    member SeeAlso: HtmlProvider+SeeAlso with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "See also")


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+2002Rover75ClubSeANiceOne : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+2002Rover75ClubSeANiceOne : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+GfL : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+GhEb : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+GhTopl : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List11 : FDR.HtmlList<int>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List3 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List7 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List9 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Menu3 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Menu3 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Menu3 : FDR.HtmlList<int>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso : FDR.HtmlList<string>


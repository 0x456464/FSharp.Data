[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider : FDR.TypedHtmlDocument
    new : () -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "doctor_who.html")))

    static member AsyncGetSample: () -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> TypedHtmlDocument.Create(false, "", "", t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "doctor_who.html"), f)

    static member AsyncLoad: uri:string -> HtmlProvider async
    let f = new Func<_,_>(fun (t:TextReader) -> TypedHtmlDocument.Create(false, "", "", t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri), f)

    static member GetSample: () -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "HTML" "" "doctor_who.html")))

    member Lists: HtmlProvider+ListsContainer with get
    this

    static member Load: stream:System.IO.Stream -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", ((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", reader)

    static member Load: uri:string -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "HTML" "" uri)))

    static member Parse: text:string -> HtmlProvider
    TypedHtmlDocument.Create(false, "", "", ((new StringReader(text)) :> TextReader))

    member Tables: HtmlProvider+TablesContainer with get
    this


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ListsContainer : FDR.TypedHtmlDocument
    member Contents: HtmlProvider+Contents with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Contents")

    member ExternalLinks: HtmlProvider+ExternalLinks with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "External links")

    member Footnotes: HtmlProvider+Footnotes with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Footnotes")

    member Interaction: HtmlProvider+Interaction with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Interaction")

    member Languages: HtmlProvider+Languages with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Languages")

    member Languages: HtmlProvider+Languages with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Languages")

    member Languages: HtmlProvider+Languages with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Languages")

    member Languages: HtmlProvider+Languages with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Languages")

    member List10: HtmlProvider+List10 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List10")

    member List11: HtmlProvider+List11 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List11")

    member List12: HtmlProvider+List12 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List12")

    member List13: HtmlProvider+List13 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List13")

    member List14: HtmlProvider+List14 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List14")

    member List15: HtmlProvider+List15 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List15")

    member List16: HtmlProvider+List16 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List16")

    member List17: HtmlProvider+List17 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List17")

    member List18: HtmlProvider+List18 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List18")

    member List19: HtmlProvider+List19 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List19")

    member List20: HtmlProvider+List20 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List20")

    member List21: HtmlProvider+List21 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List21")

    member List22: HtmlProvider+List22 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List22")

    member List23: HtmlProvider+List23 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List23")

    member List24: HtmlProvider+List24 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List24")

    member List25: HtmlProvider+List25 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List25")

    member List26: HtmlProvider+List26 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List26")

    member List27: HtmlProvider+List27 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List27")

    member List28: HtmlProvider+List28 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List28")

    member List29: HtmlProvider+List29 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List29")

    member List30: HtmlProvider+List30 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List30")

    member List31: HtmlProvider+List31 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List31")

    member List32: HtmlProvider+List32 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List32")

    member List33: HtmlProvider+List33 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List33")

    member List34: HtmlProvider+List34 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List34")

    member List35: HtmlProvider+List35 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List35")

    member List36: HtmlProvider+List36 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List36")

    member List37: HtmlProvider+List37 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List37")

    member List38: HtmlProvider+List38 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List38")

    member List39: HtmlProvider+List39 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List39")

    member List40: HtmlProvider+List40 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List40")

    member List41: HtmlProvider+List41 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List41")

    member List42: HtmlProvider+List42 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List42")

    member List43: HtmlProvider+List43 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertInteger("", value), value))
    HtmlList<_>.Create(rowConverter, this, "List43")

    member List44: HtmlProvider+List44 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List44")

    member List45: HtmlProvider+List45 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List45")

    member List46: HtmlProvider+List46 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List46")

    member List47: HtmlProvider+List47 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List47")

    member List48: HtmlProvider+List48 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List48")

    member List49: HtmlProvider+List49 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List49")

    member List50: HtmlProvider+List50 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List50")

    member List51: HtmlProvider+List51 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List51")

    member List52: HtmlProvider+List52 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List52")

    member List53: HtmlProvider+List53 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List53")

    member List54: HtmlProvider+List54 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List54")

    member List55: HtmlProvider+List55 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List55")

    member List56: HtmlProvider+List56 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List56")

    member List57: HtmlProvider+List57 with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "List57")

    member Namespaces: HtmlProvider+Namespaces with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Namespaces")

    member Navigation: HtmlProvider+Navigation with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Navigation")

    member PersonalTools: HtmlProvider+PersonalTools with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Personal tools")

    member PrintExport: HtmlProvider+PrintExport with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Print/export")

    member References: HtmlProvider+References with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "References")

    member SeeAlso: HtmlProvider+SeeAlso with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "See also")

    member Sources: HtmlProvider+Sources with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Sources")

    member Tools: HtmlProvider+Tools with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Tools")

    member Views: HtmlProvider+Views with get
    let rowConverter = new Func<_,_>(fun (row:string) -> 
                                        let value = TextConversions.AsString(row)
                                        TextRuntime.GetNonOptionalValue("", TextRuntime.ConvertString(value), value))
    HtmlList<_>.Create(rowConverter, this, "Views")


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+TablesContainer : FDR.TypedHtmlDocument
    member 50thAnniversary: HtmlProvider+50thAnniversary with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Reader / Starring", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdates", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "50th Anniversary")

    member AudiobookReadings: HtmlProvider+AudiobookReadings with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Reader", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdates", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Audiobook readings")

    member HomeVideoReleases: HtmlProvider+HomeVideoReleases with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Release date", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Home video releases")

    member OverviewOfSeasonsAndSeries: HtmlProvider+OverviewOfSeasonsAndSeries with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Season/Series", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Season/Series2", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Doctor", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Serials", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Premiere Date (UK)", TextRuntime.ConvertDateTime("", value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Premiere viewers (in millions)", TextRuntime.ConvertDecimal("", value), value),
                                        let value = TextConversions.AsString(row.[7])
                                        TextRuntime.GetNonOptionalValue("Finale Date (UK)", TextRuntime.ConvertDateTime("", value), value),
                                        let value = TextConversions.AsString(row.[8])
                                        TextRuntime.GetNonOptionalValue("Finale viewers (in millions)", TextRuntime.ConvertFloat("", "", value), value),
                                        let value = TextConversions.AsString(row.[9])
                                        TextRuntime.GetNonOptionalValue("Average viewers (in millions)", TextRuntime.ConvertFloat("", "", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Overview of seasons and series")

    member RadioBroadcasts: HtmlProvider+RadioBroadcasts with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts")

    member RadioBroadcasts2: HtmlProvider+RadioBroadcasts2 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 2")

    member RadioBroadcasts3: HtmlProvider+RadioBroadcasts3 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 3")

    member RadioBroadcasts4: HtmlProvider+RadioBroadcasts4 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 4")

    member RadioBroadcasts5: HtmlProvider+RadioBroadcasts5 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director/Producer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Radio broadcasts 5")

    member Season10197273: HtmlProvider+Season10197273 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 10 (1972-73)")

    member Season11197374: HtmlProvider+Season11197374 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 11 (1973-74)")

    member Season1196364: HtmlProvider+Season1196364 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 1 (1963-64)")

    member Season12197475: HtmlProvider+Season12197475 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 12 (1974-75)")

    member Season13197576: HtmlProvider+Season13197576 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 13 (1975-76)")

    member Season14197677: HtmlProvider+Season14197677 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 14 (1976-77)")

    member Season15197778: HtmlProvider+Season15197778 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 15 (1977-78)")

    member Season16197879: HtmlProvider+Season16197879 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 16 (1978-79)")

    member Season17197980: HtmlProvider+Season17197980 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 17 (1979-80)")

    member Season18198081: HtmlProvider+Season18198081 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 18 (1980-81)")

    member Season191982: HtmlProvider+Season191982 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 19 (1982)")

    member Season201983: HtmlProvider+Season201983 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 20 (1983)")

    member Season211984: HtmlProvider+Season211984 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 21 (1984)")

    member Season211984Continued: HtmlProvider+Season211984Continued with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 21 (1984) continued")

    member Season2196465: HtmlProvider+Season2196465 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 2 (1964-65)")

    member Season221985: HtmlProvider+Season221985 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 22 (1985)")

    member Season231986: HtmlProvider+Season231986 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 23 (1986)")

    member Season241987: HtmlProvider+Season241987 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 24 (1987)")

    member Season25198889: HtmlProvider+Season25198889 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 25 (1988-89)")

    member Season261989: HtmlProvider+Season261989 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 26 (1989)")

    member Season3196566: HtmlProvider+Season3196566 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 3 (1965-66)")

    member Season4196667: HtmlProvider+Season4196667 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 4 (1966-67)")

    member Season4196667Continued: HtmlProvider+Season4196667Continued with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 4 (1966-67) continued")

    member Season5196768: HtmlProvider+Season5196768 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 5 (1967-68)")

    member Season6196869: HtmlProvider+Season6196869 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 6 (1968-69)")

    member Season71970: HtmlProvider+Season71970 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 7 (1970)")

    member Season81971: HtmlProvider+Season81971 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 8 (1971)")

    member Season91972: HtmlProvider+Season91972 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Season 9 (1972)")

    member SeeAlso: HtmlProvider+SeeAlso with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Column1", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "See also")

    member Series1: HtmlProvider+Series1 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Original release", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 1")

    member Series12005: HtmlProvider+Series12005 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 1 (2005)")

    member Series2: HtmlProvider+Series2 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Original release", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 2")

    member Series22006: HtmlProvider+Series22006 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 2 (2006)")

    member Series32007: HtmlProvider+Series32007 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 3 (2007)")

    member Series42008: HtmlProvider+Series42008 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 4 (2008)")

    member Series52010: HtmlProvider+Series52010 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 5 (2010)")

    member Series62011: HtmlProvider+Series62011 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 6 (2011)")

    member Series7201213: HtmlProvider+Series7201213 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 7 (2012-13)")

    member Series7201213Continued: HtmlProvider+Series7201213Continued with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 7 (2012-13) continued")

    member Series82014: HtmlProvider+Series82014 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Series 8 (2014)")

    member Special1983: HtmlProvider+Special1983 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Special (1983)")

    member Special2006: HtmlProvider+Special2006 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Special (2006)")

    member Special2014: HtmlProvider+Special2014 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertFloat("", "", value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Special (2014)")

    member Specials: HtmlProvider+Specials with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Doctor", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Season/Series", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Premiere Date (UK)", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Finale Date (UK)", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Average viewers (in millions)", TextRuntime.ConvertFloat("", "", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials")

    member Specials2005: HtmlProvider+Specials2005 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2005)")

    member Specials2007: HtmlProvider+Specials2007 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2007)")

    member Specials200810: HtmlProvider+Specials200810 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2008-10)")

    member Specials201011: HtmlProvider+Specials201011 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertDateTime("", value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2010-11)")

    member Specials201112: HtmlProvider+Specials201112 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2011-12)")

    member Specials2012: HtmlProvider+Specials2012 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2012)")

    member Specials2013: HtmlProvider+Specials2013 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Specials (2013)")

    member Table66: HtmlProvider+Table66 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Doctor Who", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Doctor Who 2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table66")

    member Table67: HtmlProvider+Table67 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Characters", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table67")

    member Table68: HtmlProvider+Table68 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Production", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table68")

    member Table69: HtmlProvider+Table69 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Spin-offs", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table69")

    member Table70: HtmlProvider+Table70 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Showrunners", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table70")

    member Table71: HtmlProvider+Table71 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Film", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Column2", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Table71")

    member TelevisionBroadcasts: HtmlProvider+TelevisionBroadcasts with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Television broadcasts")

    member TelevisionMovie1996: HtmlProvider+TelevisionMovie1996 with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("No", TextRuntime.ConvertInteger("", value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Code", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[5])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[6])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Television movie (1996)")

    member Webcasts: HtmlProvider+Webcasts with get
    let rowConverter = new Func<_,_>(fun (row:string[]) -> 
                                        let value = TextConversions.AsString(row.[0])
                                        TextRuntime.GetNonOptionalValue("Title", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[1])
                                        TextRuntime.GetNonOptionalValue("Episodes", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[2])
                                        TextRuntime.GetNonOptionalValue("Writer", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[3])
                                        TextRuntime.GetNonOptionalValue("Director", TextRuntime.ConvertString(value), value),
                                        let value = TextConversions.AsString(row.[4])
                                        TextRuntime.GetNonOptionalValue("Original airdate", TextRuntime.ConvertString(value), value))
    HtmlTable<_>.Create(rowConverter, this, "Webcasts")


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+50thAnniversary : FDR.HtmlTable<HtmlProvider+50thAnniversary+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+AudiobookReadings : FDR.HtmlTable<HtmlProvider+AudiobookReadings+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Contents : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+ExternalLinks : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Footnotes : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+HomeVideoReleases : FDR.HtmlTable<HtmlProvider+HomeVideoReleases+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Interaction : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Languages : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Languages : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Languages : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Languages : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List10 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List11 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List12 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List13 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List14 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List15 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List16 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List17 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List18 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List19 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List20 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List21 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List22 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List23 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List24 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List25 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List26 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List27 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List28 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List29 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List30 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List31 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List32 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List33 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List34 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List35 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List36 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List37 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List38 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List39 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List40 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List41 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List42 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List43 : FDR.HtmlList<int>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List44 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List45 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List46 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List47 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List48 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List49 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List50 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List51 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List52 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List53 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List54 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List55 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List56 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+List57 : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Namespaces : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Navigation : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+OverviewOfSeasonsAndSeries : FDR.HtmlTable<HtmlProvider+OverviewOfSeasonsAndSeries+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+PersonalTools : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+PrintExport : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts : FDR.HtmlTable<HtmlProvider+RadioBroadcasts+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts2 : FDR.HtmlTable<HtmlProvider+RadioBroadcasts2+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts3 : FDR.HtmlTable<HtmlProvider+RadioBroadcasts3+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts4 : FDR.HtmlTable<HtmlProvider+RadioBroadcasts4+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts5 : FDR.HtmlTable<HtmlProvider+RadioBroadcasts5+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+References : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season10197273 : FDR.HtmlTable<HtmlProvider+Season10197273+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season11197374 : FDR.HtmlTable<HtmlProvider+Season11197374+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season1196364 : FDR.HtmlTable<HtmlProvider+Season1196364+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season12197475 : FDR.HtmlTable<HtmlProvider+Season12197475+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season13197576 : FDR.HtmlTable<HtmlProvider+Season13197576+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season14197677 : FDR.HtmlTable<HtmlProvider+Season14197677+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season15197778 : FDR.HtmlTable<HtmlProvider+Season15197778+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season16197879 : FDR.HtmlTable<HtmlProvider+Season16197879+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season17197980 : FDR.HtmlTable<HtmlProvider+Season17197980+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season18198081 : FDR.HtmlTable<HtmlProvider+Season18198081+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season191982 : FDR.HtmlTable<HtmlProvider+Season191982+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season201983 : FDR.HtmlTable<HtmlProvider+Season201983+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984 : FDR.HtmlTable<HtmlProvider+Season211984+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984Continued : FDR.HtmlTable<HtmlProvider+Season211984Continued+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season2196465 : FDR.HtmlTable<HtmlProvider+Season2196465+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season221985 : FDR.HtmlTable<HtmlProvider+Season221985+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season231986 : FDR.HtmlTable<HtmlProvider+Season231986+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season241987 : FDR.HtmlTable<HtmlProvider+Season241987+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season25198889 : FDR.HtmlTable<HtmlProvider+Season25198889+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season261989 : FDR.HtmlTable<HtmlProvider+Season261989+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season3196566 : FDR.HtmlTable<HtmlProvider+Season3196566+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667 : FDR.HtmlTable<HtmlProvider+Season4196667+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667Continued : FDR.HtmlTable<HtmlProvider+Season4196667Continued+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season5196768 : FDR.HtmlTable<HtmlProvider+Season5196768+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season6196869 : FDR.HtmlTable<HtmlProvider+Season6196869+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season71970 : FDR.HtmlTable<HtmlProvider+Season71970+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season81971 : FDR.HtmlTable<HtmlProvider+Season81971+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season91972 : FDR.HtmlTable<HtmlProvider+Season91972+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso : FDR.HtmlList<string>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso : FDR.HtmlTable<HtmlProvider+SeeAlso+Row>

[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+50thAnniversary+Row : string * string * string * string * System.DateTime
    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdates``: System.DateTime with get
    (let _,_,_,_,t5 = this in t5)

    member ``Reader / Starring``: string with get
    (let _,_,_,t4,_ = this in t4)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+AudiobookReadings+Row : string * string * string * string * string
    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdates``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Reader: string with get
    (let _,_,_,t4,_ = this in t4)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+HomeVideoReleases+Row : string * string * string * string * string
    member Director: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Release date``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+OverviewOfSeasonsAndSeries+Row : string * string * string * int * int * System.DateTime * decimal * System.DateTime * float * float
    member ``Average viewers (in millions)``: float with get
    (let _,_,_,_,_,_,_,_,_,t10 = this in t10)

    member Doctor: string with get
    (let _,_,t3,_,_,_,_,_,_,_ = this in t3)

    member Episodes: int with get
    (let _,_,_,_,t5,_,_,_,_,_ = this in t5)

    member ``Finale Date (UK)``: System.DateTime with get
    (let _,_,_,_,_,_,_,t8,_,_ = this in t8)

    member ``Finale viewers (in millions)``: float with get
    (let _,_,_,_,_,_,_,_,t9,_ = this in t9)

    member ``Premiere Date (UK)``: System.DateTime with get
    (let _,_,_,_,_,t6,_,_,_,_ = this in t6)

    member ``Premiere viewers (in millions)``: decimal with get
    (let _,_,_,_,_,_,t7,_,_,_ = this in t7)

    member Season/Series: string with get
    (let t1,_,_,_,_,_,_,_,_,_ = this in t1)

    member Season/Series2: string with get
    (let _,t2,_,_,_,_,_,_,_,_ = this in t2)

    member Serials: int with get
    (let _,_,_,t4,_,_,_,_,_,_ = this in t4)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts2+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts3+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts4+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+RadioBroadcasts5+Row : string * string * string * string * string
    member Director/Producer: string with get
    (let _,_,_,t4,_ = this in t4)

    member Episodes: string with get
    (let _,t2,_,_,_ = this in t2)

    member ``Original airdate``: string with get
    (let _,_,_,_,t5 = this in t5)

    member Title: string with get
    (let t1,_,_,_,_ = this in t1)

    member Writer: string with get
    (let _,_,t3,_,_ = this in t3)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season10197273+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season11197374+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season1196364+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season12197475+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season13197576+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season14197677+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season15197778+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season16197879+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season17197980+Row : string * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: string with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season18198081+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season191982+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season201983+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season211984Continued+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season2196465+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season221985+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season231986+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season241987+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season25198889+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season261989+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season3196566+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season4196667Continued+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season5196768+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season6196869+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season71970+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season81971+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+Season91972+Row : int * string * string * string * string * string * string
    member Code: string with get
    (let _,_,t3,_,_,_,_ = this in t3)

    member Director: string with get
    (let _,_,_,_,_,t6,_ = this in t6)

    member Episodes: string with get
    (let _,_,_,t4,_,_,_ = this in t4)

    member No: int with get
    (let t1,_,_,_,_,_,_ = this in t1)

    member ``Original airdate``: string with get
    (let _,_,_,_,_,_,t7 = this in t7)

    member Title: string with get
    (let _,t2,_,_,_,_,_ = this in t2)

    member Writer: string with get
    (let _,_,_,_,t5,_,_ = this in t5)


[<[TypeProviderEditorHideMethods()]>]
class HtmlProvider+SeeAlso+Row : string * string
    member Column1: string with get
    (let t1,_ = this in t1)

    member Column2: string with get
    (let _,t2 = this in t2)



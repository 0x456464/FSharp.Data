class CsvProvider : FDR.CsvFile<CsvProvider+Row>
    static member AsyncGetSample: () -> CsvProvider async
    CsvFile<_>.AsyncCreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                          let value = TextConversions.AsOption(row.[0])
                                                          CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[1])
                                                          CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                          let value = TextConversions.AsOption(row.[2])
                                                          CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[3])
                                                          CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[4])
                                                          CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[5])
                                                          CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                          let value = TextConversions.AsOption(row.[6])
                                                          CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[7])
                                                          CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[8])
                                                          CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[9])
                                                          CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                          let value = TextConversions.AsOption(row.[10])
                                                          CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[11])
                                                          CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                      [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                         CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                         CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                         CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                         CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                         CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                         CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), (ProviderFileSystem.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "Titanic.csv"), ",", '"', true, false, false)

    static member AsyncLoad: uri:string -> CsvProvider async
    CsvFile<_>.AsyncCreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                          let value = TextConversions.AsOption(row.[0])
                                                          CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[1])
                                                          CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                          let value = TextConversions.AsOption(row.[2])
                                                          CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[3])
                                                          CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[4])
                                                          CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[5])
                                                          CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                          let value = TextConversions.AsOption(row.[6])
                                                          CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[7])
                                                          CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                          let value = TextConversions.AsOption(row.[8])
                                                          CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[9])
                                                          CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                          let value = TextConversions.AsOption(row.[10])
                                                          CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                          let value = TextConversions.AsOption(row.[11])
                                                          CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                      [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                         CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                         CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                         CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                         CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                         CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                         CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                         CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), (ProviderFileSystem.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri), ",", '"', true, false, false)

    static member GetSample: () -> CsvProvider
    CsvFile<_>.CreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                     let value = TextConversions.AsOption(row.[0])
                                                     CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[1])
                                                     CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                     let value = TextConversions.AsOption(row.[2])
                                                     CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[3])
                                                     CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[4])
                                                     CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[5])
                                                     CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                     let value = TextConversions.AsOption(row.[6])
                                                     CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[7])
                                                     CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[8])
                                                     CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[9])
                                                     CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                     let value = TextConversions.AsOption(row.[10])
                                                     CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[11])
                                                     CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                 [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                    CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                    CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                    CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), FSharpAsync.RunSynchronously((ProviderFileSystem.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "Titanic.csv")), ",", '"', true, false, false)

    static member Load: stream:System.IO.Stream -> CsvProvider
    CsvFile<_>.CreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                     let value = TextConversions.AsOption(row.[0])
                                                     CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[1])
                                                     CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                     let value = TextConversions.AsOption(row.[2])
                                                     CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[3])
                                                     CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[4])
                                                     CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[5])
                                                     CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                     let value = TextConversions.AsOption(row.[6])
                                                     CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[7])
                                                     CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[8])
                                                     CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[9])
                                                     CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                     let value = TextConversions.AsOption(row.[10])
                                                     CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[11])
                                                     CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                 [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                    CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                    CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                    CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), ((new StreamReader(stream)) :> TextReader), ",", '"', true, false, false)

    static member Load: reader:System.IO.TextReader -> CsvProvider
    CsvFile<_>.CreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                     let value = TextConversions.AsOption(row.[0])
                                                     CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[1])
                                                     CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                     let value = TextConversions.AsOption(row.[2])
                                                     CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[3])
                                                     CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[4])
                                                     CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[5])
                                                     CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                     let value = TextConversions.AsOption(row.[6])
                                                     CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[7])
                                                     CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[8])
                                                     CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[9])
                                                     CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                     let value = TextConversions.AsOption(row.[10])
                                                     CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[11])
                                                     CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                 [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                    CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                    CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                    CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), reader, ",", '"', true, false, false)

    static member Load: uri:string -> CsvProvider
    CsvFile<_>.CreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                     let value = TextConversions.AsOption(row.[0])
                                                     CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[1])
                                                     CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                     let value = TextConversions.AsOption(row.[2])
                                                     CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[3])
                                                     CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[4])
                                                     CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[5])
                                                     CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                     let value = TextConversions.AsOption(row.[6])
                                                     CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[7])
                                                     CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[8])
                                                     CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[9])
                                                     CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                     let value = TextConversions.AsOption(row.[10])
                                                     CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[11])
                                                     CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                 [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                    CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                    CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                    CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), FSharpAsync.RunSynchronously((ProviderFileSystem.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri)), ",", '"', true, false, false)

    static member Parse: text:string -> CsvProvider
    CsvFile<_>.CreateNonReentrant(new Func<_,_,_>(fun (parent:obj) (row:string[]) -> 
                                                     let value = TextConversions.AsOption(row.[0])
                                                     CommonRuntime.GetNonOptionalValue("PassengerId", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[1])
                                                     CommonRuntime.GetNonOptionalValue("Survived", CommonRuntime.ConvertBoolean("", value), value),
                                                     let value = TextConversions.AsOption(row.[2])
                                                     CommonRuntime.GetNonOptionalValue("Pclass", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[3])
                                                     CommonRuntime.GetNonOptionalValue("Name", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[4])
                                                     CommonRuntime.GetNonOptionalValue("Sex", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[5])
                                                     CommonRuntime.GetNonOptionalValue("Age", CommonRuntime.ConvertFloat("", "NaN,NA,#N/A,:", value), value),
                                                     let value = TextConversions.AsOption(row.[6])
                                                     CommonRuntime.GetNonOptionalValue("SibSp", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[7])
                                                     CommonRuntime.GetNonOptionalValue("Parch", CommonRuntime.ConvertInteger("", value), value),
                                                     let value = TextConversions.AsOption(row.[8])
                                                     CommonRuntime.GetNonOptionalValue("Ticket", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[9])
                                                     CommonRuntime.GetNonOptionalValue("Fare", CommonRuntime.ConvertDecimal("", value), value),
                                                     let value = TextConversions.AsOption(row.[10])
                                                     CommonRuntime.GetNonOptionalValue("Cabin", CommonRuntime.ConvertString(value), value),
                                                     let value = TextConversions.AsOption(row.[11])
                                                     CommonRuntime.GetNonOptionalValue("Embarked", CommonRuntime.ConvertString(value), value)), new Func<_,_>(fun (row:_ * _ * _ * _ * _ * _ * _ * _) -> 
                                                                                                                                                                 [| CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let t1,_,_,_,_,_,_,_,_,_,_,_ = row in t1)))
                                                                                                                                                                    CommonRuntime.ConvertBooleanBack("", CommonRuntime.GetOptionalValue((let _,t2,_,_,_,_,_,_,_,_,_,_ = row in t2)), true)
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,t3,_,_,_,_,_,_,_,_,_ = row in t3)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,t4,_,_,_,_,_,_,_,_ = row in t4)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,t5,_,_,_,_,_,_,_ = row in t5)))
                                                                                                                                                                    CommonRuntime.ConvertFloatBack("", "NaN,NA,#N/A,:", CommonRuntime.GetOptionalValue((let _,_,_,_,_,t6,_,_,_,_,_,_ = row in t6)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,t7,_,_,_,_,_ = row in t7)))
                                                                                                                                                                    CommonRuntime.ConvertIntegerBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,t8,_,_,_,_ = row in t8)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,t9,_,_,_ = row in t9)))
                                                                                                                                                                    CommonRuntime.ConvertDecimalBack("", CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,t10,_,_ = row in t10)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,t11,_ = row in t11)))
                                                                                                                                                                    CommonRuntime.ConvertStringBack(CommonRuntime.GetOptionalValue((let _,_,_,_,_,_,_,_,_,_,_,t12 = row in t12))) |]), ((new StringReader(text)) :> TextReader), ",", '"', true, false, false)


class CsvProvider+Row : int * bool * int * string * string * float * int * int * string * decimal * string * string
    member Age: float with get
    (let _,_,_,_,_,t6,_,_,_,_,_,_ = this in t6)

    member Cabin: string with get
    (let _,_,_,_,_,_,_,_,_,_,t11,_ = this in t11)

    member Embarked: string with get
    (let _,_,_,_,_,_,_,_,_,_,_,t12 = this in t12)

    member Fare: decimal with get
    (let _,_,_,_,_,_,_,_,_,t10,_,_ = this in t10)

    member Name: string with get
    (let _,_,_,t4,_,_,_,_,_,_,_,_ = this in t4)

    member Parch: int with get
    (let _,_,_,_,_,_,_,t8,_,_,_,_ = this in t8)

    member PassengerId: int with get
    (let t1,_,_,_,_,_,_,_,_,_,_,_ = this in t1)

    member Pclass: int with get
    (let _,_,t3,_,_,_,_,_,_,_,_,_ = this in t3)

    member Sex: string with get
    (let _,_,_,_,t5,_,_,_,_,_,_,_ = this in t5)

    member SibSp: int with get
    (let _,_,_,_,_,_,t7,_,_,_,_,_ = this in t7)

    member Survived: bool with get
    (let _,t2,_,_,_,_,_,_,_,_,_,_ = this in t2)

    member Ticket: string with get
    (let _,_,_,_,_,_,_,_,t9,_,_,_ = this in t9)



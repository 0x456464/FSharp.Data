class XmlProvider
    static member AsyncGetSample: () -> XmlProvider+DomainTypes+Ordercontainer async
    XmlElement.AsyncCreate((ProviderFileSystem.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "projects.xml"))

    static member AsyncLoad: uri:string -> XmlProvider+DomainTypes+Ordercontainer async
    XmlElement.AsyncCreate((ProviderFileSystem.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri))

    static member GetSample: () -> XmlProvider+DomainTypes+Ordercontainer
    XmlElement.Create((ProviderFileSystem.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "projects.xml") |> FSharpAsync.RunSynchronously)

    static member Load: stream:System.IO.Stream -> XmlProvider+DomainTypes+Ordercontainer
    XmlElement.Create(((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> XmlProvider+DomainTypes+Ordercontainer
    XmlElement.Create(reader)

    static member Load: uri:string -> XmlProvider+DomainTypes+Ordercontainer
    XmlElement.Create((ProviderFileSystem.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri) |> FSharpAsync.RunSynchronously)

    static member Parse: text:string -> XmlProvider+DomainTypes+Ordercontainer
    XmlElement.Create(((new StringReader(text)) :> TextReader))


class XmlProvider+DomainTypes

class XmlProvider+DomainTypes+Ordercontainer : FDR.XmlElement
    member Backgrounds: XmlProvider+DomainTypes+Backgrounds with get
    XmlOperations.GetChild(this, "backgrounds")

    member Project: XmlProvider+DomainTypes+Project with get
    XmlOperations.GetChild(this, "project")


class XmlProvider+DomainTypes+Backgrounds : FDR.XmlElement
    member Background: XmlProvider+DomainTypes+Background with get
    XmlOperations.GetChild(this, "background")


class XmlProvider+DomainTypes+Project : FDR.XmlElement
    member Title: string with get
    Operations.GetNonOptionalValue("Value", Operations.ConvertString(XmlOperations.TryGetValue(XmlOperations.GetChild(this, "title"))), XmlOperations.TryGetValue(XmlOperations.GetChild(this, "title")))


class XmlProvider+DomainTypes+Background : FDR.XmlElement
    member Title: string with get
    Operations.GetNonOptionalValue("Value", Operations.ConvertString(XmlOperations.TryGetValue(XmlOperations.GetChild(this, "title"))), XmlOperations.TryGetValue(XmlOperations.GetChild(this, "title")))



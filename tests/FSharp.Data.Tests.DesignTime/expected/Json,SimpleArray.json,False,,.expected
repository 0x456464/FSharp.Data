class JsonProvider
    static member AsyncGetSample: () -> JsonProvider+DomainTypes+Entity async
    JsonDocument.AsyncCreate((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "SimpleArray.json"), "")

    static member AsyncLoad: uri:string -> JsonProvider+DomainTypes+Entity async
    JsonDocument.AsyncCreate((IO.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri), "")

    static member GetSample: () -> JsonProvider+DomainTypes+Entity
    JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "SimpleArray.json")), "")

    static member Load: stream:System.IO.Stream -> JsonProvider+DomainTypes+Entity
    JsonDocument.Create(((new StreamReader(stream)) :> TextReader), "")

    static member Load: reader:System.IO.TextReader -> JsonProvider+DomainTypes+Entity
    JsonDocument.Create(reader, "")

    static member Load: uri:string -> JsonProvider+DomainTypes+Entity
    JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri)), "")

    static member Parse: text:string -> JsonProvider+DomainTypes+Entity
    JsonDocument.Create(((new StringReader(text)) :> TextReader), "")


class JsonProvider+DomainTypes

class JsonProvider+DomainTypes+Entity : FDR.IJsonDocument
    member Items: JsonProvider+DomainTypes+Item[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "items"), new Func<_,_>(id)))


class JsonProvider+DomainTypes+Item : FDR.IJsonDocument
    member Id: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertString("", value), value)



class XmlProvider
    static member AsyncGetSample: () -> XmlProvider+DomainTypes+Authors async
    XmlElement.AsyncCreate((ProviderFileSystem.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "Philosophy.xml"))

    static member AsyncLoad: uri:string -> XmlProvider+DomainTypes+Authors async
    XmlElement.AsyncCreate((ProviderFileSystem.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri))

    static member GetSample: () -> XmlProvider+DomainTypes+Authors
    XmlElement.Create((ProviderFileSystem.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "Philosophy.xml") |> FSharpAsync.RunSynchronously)

    static member Load: stream:System.IO.Stream -> XmlProvider+DomainTypes+Authors
    XmlElement.Create(((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> XmlProvider+DomainTypes+Authors
    XmlElement.Create(reader)

    static member Load: uri:string -> XmlProvider+DomainTypes+Authors
    XmlElement.Create((ProviderFileSystem.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri) |> FSharpAsync.RunSynchronously)

    static member Parse: text:string -> XmlProvider+DomainTypes+Authors
    XmlElement.Create(((new StringReader(text)) :> TextReader))


class XmlProvider+DomainTypes+Authors : FDR.XmlElement
    member GetAuthors: () -> XmlProvider+DomainTypes+Author[]
    XmlOperations.ConvertArray(this, "author", new Func<_,_>(id)))


class XmlProvider+DomainTypes

class XmlProvider+DomainTypes+Author : FDR.XmlElement
    member Birth: int option with get
    Operations.ConvertInteger("", XmlOperations.TryGetAttribute(this, "birth"))

    member GetBooks: () -> XmlProvider+DomainTypes+Book[]
    XmlOperations.ConvertArray(this, "book", new Func<_,_>(id)))

    member Manuscript: XmlProvider+DomainTypes+Manuscript option with get
    XmlOperations.ConvertOptional(this, "manuscript", new Func<_,_>(id)))

    member Name: string with get
    Operations.GetNonOptionalValue("Attribute name", Operations.ConvertString(XmlOperations.TryGetAttribute(this, "name")), XmlOperations.TryGetAttribute(this, "name"))

    member Surname: string with get
    Operations.GetNonOptionalValue("Attribute surname", Operations.ConvertString(XmlOperations.TryGetAttribute(this, "surname")), XmlOperations.TryGetAttribute(this, "surname"))


class XmlProvider+DomainTypes+Book : FDR.XmlElement
    member Title: string with get
    Operations.GetNonOptionalValue("Attribute title", Operations.ConvertString(XmlOperations.TryGetAttribute(this, "title")), XmlOperations.TryGetAttribute(this, "title"))


class XmlProvider+DomainTypes+Manuscript : FDR.XmlElement
    member Title: string with get
    Operations.GetNonOptionalValue("Attribute title", Operations.ConvertString(XmlOperations.TryGetAttribute(this, "title")), XmlOperations.TryGetAttribute(this, "title"))



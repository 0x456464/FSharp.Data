class JsonProvider
    static member AsyncGetSamples: () -> JsonProvider+Entity[] async
    JsonDocument.AsyncCreateList((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "TwitterStream.json"), "")

    static member AsyncLoad: uri:string -> JsonProvider+Entity async
    JsonDocument.AsyncCreate((IO.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri), "")

    static member GetSamples: () -> JsonProvider+Entity[]
    JsonDocument.CreateList(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "TwitterStream.json")), "")

    static member Load: stream:System.IO.Stream -> JsonProvider+Entity
    JsonDocument.Create(((new StreamReader(stream)) :> TextReader), "")

    static member Load: reader:System.IO.TextReader -> JsonProvider+Entity
    JsonDocument.Create(reader, "")

    static member Load: uri:string -> JsonProvider+Entity
    JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri)), "")

    static member Parse: text:string -> JsonProvider+Entity
    JsonDocument.Create(((new StringReader(text)) :> TextReader), "")


class JsonProvider+Entity : FDR.IJsonDocument
    member Contributors: FDR.JsonDocument option with get
    JsonRuntime.ConvertOptionalProperty(this, "contributors", new Func<_,_>(id)))

    member Coordinates: JsonProvider+Coordinates option with get
    JsonRuntime.ConvertOptionalProperty(this, "coordinates", new Func<_,_>(id)))

    member CreatedAt: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "created_at"))

    member Delete: JsonProvider+Delete option with get
    JsonRuntime.ConvertOptionalProperty(this, "delete", new Func<_,_>(id)))

    member Entities: JsonProvider+Entities option with get
    JsonRuntime.ConvertOptionalProperty(this, "entities", new Func<_,_>(id)))

    member Favorited: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "favorited"))

    member Geo: JsonProvider+Geo option with get
    JsonRuntime.ConvertOptionalProperty(this, "geo", new Func<_,_>(id)))

    member Id: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "id"))

    member IdStr: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "id_str"))

    member InReplyToScreenName: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_screen_name"))

    member InReplyToStatusId: JsonProvider+InReplyToStatusIdChoice option with get
    JsonRuntime.ConvertOptionalProperty(this, "in_reply_to_status_id", new Func<_,_>(id)))

    member InReplyToStatusIdStr: JsonProvider+InReplyToStatusIdStrChoice option with get
    JsonRuntime.ConvertOptionalProperty(this, "in_reply_to_status_id_str", new Func<_,_>(id)))

    member InReplyToUserId: JsonProvider+InReplyToUserIdChoice option with get
    JsonRuntime.ConvertOptionalProperty(this, "in_reply_to_user_id", new Func<_,_>(id)))

    member InReplyToUserIdStr: JsonProvider+InReplyToUserIdStrChoice option with get
    JsonRuntime.ConvertOptionalProperty(this, "in_reply_to_user_id_str", new Func<_,_>(id)))

    member Place: JsonProvider+Place option with get
    JsonRuntime.ConvertOptionalProperty(this, "place", new Func<_,_>(id)))

    member PossiblySensitive: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive"))

    member PossiblySensitiveEditable: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive_editable"))

    member RetweetCount: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "retweet_count"))

    member Retweeted: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "retweeted"))

    member RetweetedStatus: JsonProvider+RetweetedStatus option with get
    JsonRuntime.ConvertOptionalProperty(this, "retweeted_status", new Func<_,_>(id)))

    member Source: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "source"))

    member Text: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "text"))

    member Truncated: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "truncated"))

    member User: JsonProvider+User option with get
    JsonRuntime.ConvertOptionalProperty(this, "user", new Func<_,_>(id)))


class JsonProvider+Coordinates : FDR.IJsonDocument
    member Coordinates: decimal[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "coordinates"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                                  let value = Some t.JsonValue
                                                                                                  JsonRuntime.GetNonOptionalValue("coordinate", JsonRuntime.ConvertDecimal("", value), value)))

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "type")
    JsonRuntime.GetNonOptionalValue("type", JsonRuntime.ConvertString("", value), value)


class JsonProvider+Delete : FDR.IJsonDocument
    member Status: JsonProvider+Status with get
    JsonRuntime.GetPropertyPacked(this, "status")


class JsonProvider+Entities : FDR.IJsonDocument
    member Hashtags: JsonProvider+Hashtag[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "hashtags"), new Func<_,_>(id)))

    member Media: JsonProvider+Media[] option with get
    JsonRuntime.ConvertOptionalProperty(this, "media", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.ConvertArray(t, new Func<_,_>(id)))))

    member Urls: JsonProvider+Url[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "urls"), new Func<_,_>(id)))

    member UserMentions: JsonProvider+UserMention[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "user_mentions"), new Func<_,_>(id)))


class JsonProvider+Geo : FDR.IJsonDocument
    member Coordinates: decimal[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "coordinates"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                                  let value = Some t.JsonValue
                                                                                                  JsonRuntime.GetNonOptionalValue("coordinate", JsonRuntime.ConvertDecimal("", value), value)))

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "type")
    JsonRuntime.GetNonOptionalValue("type", JsonRuntime.ConvertString("", value), value)


class JsonProvider+InReplyToStatusIdChoice : FDR.IJsonDocument
    member Number: int64 option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_status_idChoice1of1", JsonRuntime.ConvertInteger64("", value), value)))


class JsonProvider+InReplyToStatusIdStrChoice : FDR.IJsonDocument
    member Number: int64 option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_status_id_strChoice1of1", JsonRuntime.ConvertInteger64("", value), value)))


class JsonProvider+InReplyToUserIdChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_user_idChoice1of1", JsonRuntime.ConvertInteger("", value), value)))


class JsonProvider+InReplyToUserIdStrChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_user_id_strChoice1of1", JsonRuntime.ConvertInteger("", value), value)))


class JsonProvider+Place : FDR.IJsonDocument
    member Attributes: JsonProvider+Attributes with get
    JsonRuntime.GetPropertyPacked(this, "attributes")

    member BoundingBox: JsonProvider+BoundingBox with get
    JsonRuntime.GetPropertyPacked(this, "bounding_box")

    member Country: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "country")
    JsonRuntime.GetNonOptionalValue("country", JsonRuntime.ConvertString("", value), value)

    member CountryCode: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "country_code")
    JsonRuntime.GetNonOptionalValue("country_code", JsonRuntime.ConvertString("", value), value)

    member FullName: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "full_name")
    JsonRuntime.GetNonOptionalValue("full_name", JsonRuntime.ConvertString("", value), value)

    member Id: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertString("", value), value)

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "name")
    JsonRuntime.GetNonOptionalValue("name", JsonRuntime.ConvertString("", value), value)

    member PlaceType: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "place_type")
    JsonRuntime.GetNonOptionalValue("place_type", JsonRuntime.ConvertString("", value), value)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)


class JsonProvider+RetweetedStatus : FDR.IJsonDocument
    member Contributors: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "contributors")

    member Coordinates: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "coordinates")

    member CreatedAt: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "created_at")
    JsonRuntime.GetNonOptionalValue("created_at", JsonRuntime.ConvertString("", value), value)

    member Entities: JsonProvider+Entities2 with get
    JsonRuntime.GetPropertyPacked(this, "entities")

    member Favorited: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "favorited")
    JsonRuntime.GetNonOptionalValue("favorited", JsonRuntime.ConvertBoolean("", value), value)

    member Geo: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "geo")

    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger64("", value), value)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger64("", value), value)

    member InReplyToScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_screen_name")
    JsonRuntime.GetNonOptionalValue("in_reply_to_screen_name", JsonRuntime.ConvertString("", value), value)

    member InReplyToStatusId: JsonProvider+InReplyToStatusIdChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "in_reply_to_status_id")

    member InReplyToStatusIdStr: JsonProvider+InReplyToStatusIdStrChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "in_reply_to_status_id_str")

    member InReplyToUserId: JsonProvider+InReplyToUserIdChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "in_reply_to_user_id")

    member InReplyToUserIdStr: JsonProvider+InReplyToUserIdStrChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "in_reply_to_user_id_str")

    member Place: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "place")

    member PossiblySensitive: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive"))

    member PossiblySensitiveEditable: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive_editable"))

    member RetweetCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "retweet_count")
    JsonRuntime.GetNonOptionalValue("retweet_count", JsonRuntime.ConvertInteger("", value), value)

    member Retweeted: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "retweeted")
    JsonRuntime.GetNonOptionalValue("retweeted", JsonRuntime.ConvertBoolean("", value), value)

    member Source: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "source")
    JsonRuntime.GetNonOptionalValue("source", JsonRuntime.ConvertString("", value), value)

    member Text: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "text")
    JsonRuntime.GetNonOptionalValue("text", JsonRuntime.ConvertString("", value), value)

    member Truncated: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "truncated")
    JsonRuntime.GetNonOptionalValue("truncated", JsonRuntime.ConvertBoolean("", value), value)

    member User: JsonProvider+User2 with get
    JsonRuntime.GetPropertyPacked(this, "user")


class JsonProvider+User : FDR.IJsonDocument
    member ContributorsEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "contributors_enabled")
    JsonRuntime.GetNonOptionalValue("contributors_enabled", JsonRuntime.ConvertBoolean("", value), value)

    member CreatedAt: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "created_at")
    JsonRuntime.GetNonOptionalValue("created_at", JsonRuntime.ConvertString("", value), value)

    member DefaultProfile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "default_profile")
    JsonRuntime.GetNonOptionalValue("default_profile", JsonRuntime.ConvertBoolean("", value), value)

    member DefaultProfileImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "default_profile_image")
    JsonRuntime.GetNonOptionalValue("default_profile_image", JsonRuntime.ConvertBoolean("", value), value)

    member Description: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "description")
    JsonRuntime.GetNonOptionalValue("description", JsonRuntime.ConvertString("", value), value)

    member FavouritesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "favourites_count")
    JsonRuntime.GetNonOptionalValue("favourites_count", JsonRuntime.ConvertInteger("", value), value)

    member FollowRequestSent: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "follow_request_sent")

    member FollowersCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "followers_count")
    JsonRuntime.GetNonOptionalValue("followers_count", JsonRuntime.ConvertInteger("", value), value)

    member Following: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "following")

    member FriendsCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "friends_count")
    JsonRuntime.GetNonOptionalValue("friends_count", JsonRuntime.ConvertInteger("", value), value)

    member GeoEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "geo_enabled")
    JsonRuntime.GetNonOptionalValue("geo_enabled", JsonRuntime.ConvertBoolean("", value), value)

    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger("", value), value)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger("", value), value)

    member IsTranslator: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "is_translator")
    JsonRuntime.GetNonOptionalValue("is_translator", JsonRuntime.ConvertBoolean("", value), value)

    member Lang: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "lang")
    JsonRuntime.GetNonOptionalValue("lang", JsonRuntime.ConvertString("", value), value)

    member ListedCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "listed_count")
    JsonRuntime.GetNonOptionalValue("listed_count", JsonRuntime.ConvertInteger("", value), value)

    member Location: JsonProvider+LocationChoice with get
    JsonRuntime.GetPropertyPacked(this, "location")

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "name")
    JsonRuntime.GetNonOptionalValue("name", JsonRuntime.ConvertString("", value), value)

    member Notifications: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "notifications")

    member ProfileBackgroundColor: JsonProvider+ProfileBackgroundColorChoice with get
    JsonRuntime.GetPropertyPacked(this, "profile_background_color")

    member ProfileBackgroundImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_background_image_url")
    JsonRuntime.GetNonOptionalValue("profile_background_image_url", JsonRuntime.ConvertString("", value), value)

    member ProfileBackgroundImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_background_image_url_https")
    JsonRuntime.GetNonOptionalValue("profile_background_image_url_https", JsonRuntime.ConvertString("", value), value)

    member ProfileBackgroundTile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_background_tile")
    JsonRuntime.GetNonOptionalValue("profile_background_tile", JsonRuntime.ConvertBoolean("", value), value)

    member ProfileBannerUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "profile_banner_url"))

    member ProfileImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_image_url")
    JsonRuntime.GetNonOptionalValue("profile_image_url", JsonRuntime.ConvertString("", value), value)

    member ProfileImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_image_url_https")
    JsonRuntime.GetNonOptionalValue("profile_image_url_https", JsonRuntime.ConvertString("", value), value)

    member ProfileLinkColor: JsonProvider+ProfileLinkColorChoice with get
    JsonRuntime.GetPropertyPacked(this, "profile_link_color")

    member ProfileSidebarBorderColor: JsonProvider+ProfileSidebarBorderColorChoice with get
    JsonRuntime.GetPropertyPacked(this, "profile_sidebar_border_color")

    member ProfileSidebarFillColor: JsonProvider+ProfileSidebarFillColorChoice with get
    JsonRuntime.GetPropertyPacked(this, "profile_sidebar_fill_color")

    member ProfileTextColor: JsonProvider+ProfileTextColorChoice with get
    JsonRuntime.GetPropertyPacked(this, "profile_text_color")

    member ProfileUseBackgroundImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_use_background_image")
    JsonRuntime.GetNonOptionalValue("profile_use_background_image", JsonRuntime.ConvertBoolean("", value), value)

    member Protected: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "protected")
    JsonRuntime.GetNonOptionalValue("protected", JsonRuntime.ConvertBoolean("", value), value)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "screen_name")
    JsonRuntime.GetNonOptionalValue("screen_name", JsonRuntime.ConvertString("", value), value)

    member StatusesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "statuses_count")
    JsonRuntime.GetNonOptionalValue("statuses_count", JsonRuntime.ConvertInteger("", value), value)

    member TimeZone: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "time_zone")
    JsonRuntime.GetNonOptionalValue("time_zone", JsonRuntime.ConvertString("", value), value)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)

    member UtcOffset: JsonProvider+UtcOffsetChoice with get
    JsonRuntime.GetPropertyPacked(this, "utc_offset")

    member Verified: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "verified")
    JsonRuntime.GetNonOptionalValue("verified", JsonRuntime.ConvertBoolean("", value), value)


class JsonProvider+Attributes : FDR.IJsonDocument

class JsonProvider+BoundingBox : FDR.IJsonDocument
    member Coordinates: decimal[][][] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "coordinates"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.ConvertArray(t, new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.ConvertArray(t, new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                                                                                                                                                                        let value = Some t.JsonValue
                                                                                                                                                                                                                                        JsonRuntime.GetNonOptionalValue("coordinate", JsonRuntime.ConvertDecimal("", value), value)))))))

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "type")
    JsonRuntime.GetNonOptionalValue("type", JsonRuntime.ConvertString("", value), value)


class JsonProvider+Entities2 : FDR.IJsonDocument
    member Hashtags: JsonProvider+Hashtag2[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "hashtags"), new Func<_,_>(id)))

    member Media: JsonProvider+Media2[] option with get
    JsonRuntime.ConvertOptionalProperty(this, "media", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.ConvertArray(t, new Func<_,_>(id)))))

    member Urls: JsonProvider+Url2[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "urls"), new Func<_,_>(id)))

    member UserMentions: JsonProvider+UserMention2[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "user_mentions"), new Func<_,_>(id)))


class JsonProvider+Hashtag : FDR.IJsonDocument
    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member Text: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "text")
    JsonRuntime.GetNonOptionalValue("text", JsonRuntime.ConvertString("", value), value)


class JsonProvider+InReplyToStatusIdChoice2 : FDR.IJsonDocument
    member Number: int64 option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_status_idChoice1of1", JsonRuntime.ConvertInteger64("", value), value)))


class JsonProvider+InReplyToStatusIdStrChoice2 : FDR.IJsonDocument
    member Number: int64 option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_status_id_strChoice1of1", JsonRuntime.ConvertInteger64("", value), value)))


class JsonProvider+InReplyToUserIdChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_user_idChoice1of1", JsonRuntime.ConvertInteger("", value), value)))


class JsonProvider+InReplyToUserIdStrChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("in_reply_to_user_id_strChoice1of1", JsonRuntime.ConvertInteger("", value), value)))


class JsonProvider+LocationChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("locationChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("locationChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+Media : FDR.IJsonDocument
    member DisplayUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "display_url")
    JsonRuntime.GetNonOptionalValue("display_url", JsonRuntime.ConvertString("", value), value)

    member ExpandedUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "expanded_url")
    JsonRuntime.GetNonOptionalValue("expanded_url", JsonRuntime.ConvertString("", value), value)

    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger64("", value), value)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger64("", value), value)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member MediaUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "media_url")
    JsonRuntime.GetNonOptionalValue("media_url", JsonRuntime.ConvertString("", value), value)

    member MediaUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "media_url_https")
    JsonRuntime.GetNonOptionalValue("media_url_https", JsonRuntime.ConvertString("", value), value)

    member Sizes: JsonProvider+Sizes with get
    JsonRuntime.GetPropertyPacked(this, "sizes")

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "type")
    JsonRuntime.GetNonOptionalValue("type", JsonRuntime.ConvertString("", value), value)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)


class JsonProvider+ProfileBackgroundColorChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_background_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_background_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileLinkColorChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_link_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_link_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileSidebarBorderColorChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_border_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_border_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileSidebarFillColorChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_fill_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_fill_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileTextColorChoice : FDR.IJsonDocument
    member Number: float option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_text_colorChoice1of2", JsonRuntime.ConvertFloat("", "", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_text_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+Status : FDR.IJsonDocument
    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger64("", value), value)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger64("", value), value)

    member UserId: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "user_id")
    JsonRuntime.GetNonOptionalValue("user_id", JsonRuntime.ConvertInteger("", value), value)

    member UserIdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "user_id_str")
    JsonRuntime.GetNonOptionalValue("user_id_str", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Url : FDR.IJsonDocument
    member DisplayUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "display_url")
    JsonRuntime.GetNonOptionalValue("display_url", JsonRuntime.ConvertString("", value), value)

    member ExpandedUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "expanded_url")
    JsonRuntime.GetNonOptionalValue("expanded_url", JsonRuntime.ConvertString("", value), value)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)


class JsonProvider+User2 : FDR.IJsonDocument
    member ContributorsEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "contributors_enabled")
    JsonRuntime.GetNonOptionalValue("contributors_enabled", JsonRuntime.ConvertBoolean("", value), value)

    member CreatedAt: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "created_at")
    JsonRuntime.GetNonOptionalValue("created_at", JsonRuntime.ConvertString("", value), value)

    member DefaultProfile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "default_profile")
    JsonRuntime.GetNonOptionalValue("default_profile", JsonRuntime.ConvertBoolean("", value), value)

    member DefaultProfileImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "default_profile_image")
    JsonRuntime.GetNonOptionalValue("default_profile_image", JsonRuntime.ConvertBoolean("", value), value)

    member Description: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "description")
    JsonRuntime.GetNonOptionalValue("description", JsonRuntime.ConvertString("", value), value)

    member FavouritesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "favourites_count")
    JsonRuntime.GetNonOptionalValue("favourites_count", JsonRuntime.ConvertInteger("", value), value)

    member FollowRequestSent: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "follow_request_sent")

    member FollowersCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "followers_count")
    JsonRuntime.GetNonOptionalValue("followers_count", JsonRuntime.ConvertInteger("", value), value)

    member Following: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "following")

    member FriendsCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "friends_count")
    JsonRuntime.GetNonOptionalValue("friends_count", JsonRuntime.ConvertInteger("", value), value)

    member GeoEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "geo_enabled")
    JsonRuntime.GetNonOptionalValue("geo_enabled", JsonRuntime.ConvertBoolean("", value), value)

    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger("", value), value)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger("", value), value)

    member IsTranslator: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "is_translator")
    JsonRuntime.GetNonOptionalValue("is_translator", JsonRuntime.ConvertBoolean("", value), value)

    member Lang: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "lang")
    JsonRuntime.GetNonOptionalValue("lang", JsonRuntime.ConvertString("", value), value)

    member ListedCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "listed_count")
    JsonRuntime.GetNonOptionalValue("listed_count", JsonRuntime.ConvertInteger("", value), value)

    member Location: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "location")
    JsonRuntime.GetNonOptionalValue("location", JsonRuntime.ConvertString("", value), value)

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "name")
    JsonRuntime.GetNonOptionalValue("name", JsonRuntime.ConvertString("", value), value)

    member Notifications: FDR.JsonDocument with get
    JsonRuntime.GetPropertyPacked(this, "notifications")

    member ProfileBackgroundColor: JsonProvider+ProfileBackgroundColorChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "profile_background_color")

    member ProfileBackgroundImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_background_image_url")
    JsonRuntime.GetNonOptionalValue("profile_background_image_url", JsonRuntime.ConvertString("", value), value)

    member ProfileBackgroundImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_background_image_url_https")
    JsonRuntime.GetNonOptionalValue("profile_background_image_url_https", JsonRuntime.ConvertString("", value), value)

    member ProfileBackgroundTile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_background_tile")
    JsonRuntime.GetNonOptionalValue("profile_background_tile", JsonRuntime.ConvertBoolean("", value), value)

    member ProfileBannerUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "profile_banner_url"))

    member ProfileImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_image_url")
    JsonRuntime.GetNonOptionalValue("profile_image_url", JsonRuntime.ConvertString("", value), value)

    member ProfileImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_image_url_https")
    JsonRuntime.GetNonOptionalValue("profile_image_url_https", JsonRuntime.ConvertString("", value), value)

    member ProfileLinkColor: JsonProvider+ProfileLinkColorChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "profile_link_color")

    member ProfileSidebarBorderColor: JsonProvider+ProfileSidebarBorderColorChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "profile_sidebar_border_color")

    member ProfileSidebarFillColor: JsonProvider+ProfileSidebarFillColorChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "profile_sidebar_fill_color")

    member ProfileTextColor: JsonProvider+ProfileTextColorChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "profile_text_color")

    member ProfileUseBackgroundImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "profile_use_background_image")
    JsonRuntime.GetNonOptionalValue("profile_use_background_image", JsonRuntime.ConvertBoolean("", value), value)

    member Protected: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "protected")
    JsonRuntime.GetNonOptionalValue("protected", JsonRuntime.ConvertBoolean("", value), value)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "screen_name")
    JsonRuntime.GetNonOptionalValue("screen_name", JsonRuntime.ConvertString("", value), value)

    member StatusesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "statuses_count")
    JsonRuntime.GetNonOptionalValue("statuses_count", JsonRuntime.ConvertInteger("", value), value)

    member TimeZone: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "time_zone")
    JsonRuntime.GetNonOptionalValue("time_zone", JsonRuntime.ConvertString("", value), value)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)

    member UtcOffset: JsonProvider+UtcOffsetChoice2 with get
    JsonRuntime.GetPropertyPacked(this, "utc_offset")

    member Verified: bool with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "verified")
    JsonRuntime.GetNonOptionalValue("verified", JsonRuntime.ConvertBoolean("", value), value)


class JsonProvider+UserMention : FDR.IJsonDocument
    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger("", value), value)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger("", value), value)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "name")
    JsonRuntime.GetNonOptionalValue("name", JsonRuntime.ConvertString("", value), value)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "screen_name")
    JsonRuntime.GetNonOptionalValue("screen_name", JsonRuntime.ConvertString("", value), value)


class JsonProvider+UtcOffsetChoice : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("utc_offsetChoice1of1", JsonRuntime.ConvertInteger("", value), value)))


class JsonProvider+Hashtag2 : FDR.IJsonDocument
    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member Text: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "text")
    JsonRuntime.GetNonOptionalValue("text", JsonRuntime.ConvertString("", value), value)


class JsonProvider+Media2 : FDR.IJsonDocument
    member DisplayUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "display_url")
    JsonRuntime.GetNonOptionalValue("display_url", JsonRuntime.ConvertString("", value), value)

    member ExpandedUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "expanded_url")
    JsonRuntime.GetNonOptionalValue("expanded_url", JsonRuntime.ConvertString("", value), value)

    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger64("", value), value)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger64("", value), value)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member MediaUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "media_url")
    JsonRuntime.GetNonOptionalValue("media_url", JsonRuntime.ConvertString("", value), value)

    member MediaUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "media_url_https")
    JsonRuntime.GetNonOptionalValue("media_url_https", JsonRuntime.ConvertString("", value), value)

    member Sizes: JsonProvider+Sizes2 with get
    JsonRuntime.GetPropertyPacked(this, "sizes")

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "type")
    JsonRuntime.GetNonOptionalValue("type", JsonRuntime.ConvertString("", value), value)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)


class JsonProvider+ProfileBackgroundColorChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_background_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_background_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileLinkColorChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_link_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_link_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileSidebarBorderColorChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_border_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_border_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileSidebarFillColorChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_fill_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_sidebar_fill_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+ProfileTextColorChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_text_colorChoice1of2", JsonRuntime.ConvertInteger("", value), value)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "String", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("profile_text_colorChoice2of2", JsonRuntime.ConvertString("", value), value)))


class JsonProvider+Sizes : FDR.IJsonDocument
    member Large: JsonProvider+Large with get
    JsonRuntime.GetPropertyPacked(this, "large")

    member Medium: JsonProvider+Medium with get
    JsonRuntime.GetPropertyPacked(this, "medium")

    member Small: JsonProvider+Small with get
    JsonRuntime.GetPropertyPacked(this, "small")

    member Thumb: JsonProvider+Thumb with get
    JsonRuntime.GetPropertyPacked(this, "thumb")


class JsonProvider+Url2 : FDR.IJsonDocument
    member DisplayUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "display_url")
    JsonRuntime.GetNonOptionalValue("display_url", JsonRuntime.ConvertString("", value), value)

    member ExpandedUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "expanded_url")
    JsonRuntime.GetNonOptionalValue("expanded_url", JsonRuntime.ConvertString("", value), value)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "url")
    JsonRuntime.GetNonOptionalValue("url", JsonRuntime.ConvertString("", value), value)


class JsonProvider+UserMention2 : FDR.IJsonDocument
    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id")
    JsonRuntime.GetNonOptionalValue("id", JsonRuntime.ConvertInteger("", value), value)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "id_str")
    JsonRuntime.GetNonOptionalValue("id_str", JsonRuntime.ConvertInteger("", value), value)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPacked(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                                              let value = Some t.JsonValue
                                                                                              JsonRuntime.GetNonOptionalValue("index", JsonRuntime.ConvertInteger("", value), value)))

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "name")
    JsonRuntime.GetNonOptionalValue("name", JsonRuntime.ConvertString("", value), value)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "screen_name")
    JsonRuntime.GetNonOptionalValue("screen_name", JsonRuntime.ConvertString("", value), value)


class JsonProvider+UtcOffsetChoice2 : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "Number", new Func<_,_>(fun (t:IJsonDocument) -> 
                                                                      let value = Some t.JsonValue
                                                                      JsonRuntime.GetNonOptionalValue("utc_offsetChoice1of1", JsonRuntime.ConvertInteger("", value), value)))


class JsonProvider+Large : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Medium : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Sizes2 : FDR.IJsonDocument
    member Large: JsonProvider+Large2 with get
    JsonRuntime.GetPropertyPacked(this, "large")

    member Medium: JsonProvider+Medium2 with get
    JsonRuntime.GetPropertyPacked(this, "medium")

    member Small: JsonProvider+Small2 with get
    JsonRuntime.GetPropertyPacked(this, "small")

    member Thumb: JsonProvider+Thumb2 with get
    JsonRuntime.GetPropertyPacked(this, "thumb")


class JsonProvider+Small : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Thumb : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Large2 : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Medium2 : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Small2 : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


class JsonProvider+Thumb2 : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "h")
    JsonRuntime.GetNonOptionalValue("h", JsonRuntime.ConvertInteger("", value), value)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "resize")
    JsonRuntime.GetNonOptionalValue("resize", JsonRuntime.ConvertString("", value), value)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpacked(this, "w")
    JsonRuntime.GetNonOptionalValue("w", JsonRuntime.ConvertInteger("", value), value)


